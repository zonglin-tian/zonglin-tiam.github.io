<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>人力有时而穷尽</title>
    <link href="/2024/08/08/%E4%BA%BA%E5%8A%9B%E6%9C%89%E6%97%B6%E8%80%8C%E7%A9%B7%E5%B0%BD/"/>
    <url>/2024/08/08/%E4%BA%BA%E5%8A%9B%E6%9C%89%E6%97%B6%E8%80%8C%E7%A9%B7%E5%B0%BD/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note note-success">            <p>人力终有穷, 天道终有定</p>          </div><p>大约在一个月之前, 我一直想写一篇博文记录 ChatGPT 对解决问题的极大帮助. </p><p>纵观各大网络修仙小说, 大多数主角的成长往往离不开 <strong>“引路人”</strong>, 或是什么器灵, 或是什么魂灵, …在这些引路人的帮助下, 主角的成长历程虽不至于精准, 但也可抵上高效. 不言而喻, 好的引路人对一个人的成功具有莫大的帮助. 但小说始终是小说, 现实中不可能存在那么多的奇遇, 大多数人可能终其一生也没能遇到自己的引路人, 更多的是自己摸着石头过河. </p><p>我在使用 ChatGPT 一段时间后, 内心产生一种感觉: <strong>ChatGPT 就是我在拓宽知识面, 解决问题上的一位引路人.</strong></p><p><u><strong>最开始的 “人力终有穷”</strong></u></p><p>说句实话, 出生至今, 学至精通的技能可以说没有. 虽有较多的兴趣, 但大多都是 “半桶水”, 半途而废. </p>]]></content>
    
    
    <categories>
      
      <category>Life</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Grocery</tag>
      
      <tag>Writing...</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文献阅读笔记</title>
    <link href="/2024/08/02/%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
    <url>/2024/08/02/%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><table>    <tr>        <td>2024-08-02</td>        <td style="text-align:center" colspan="4"><a href="https://github.com/LMozart/CVPR2024-SpinUP">Spin Light for Natural Light Uncalibrated Photometric Stereo</a></td>    </tr>    <tr>        <td rowspan="4">文献简介</td>        <td>作者</td>        <td>Zongrui Li1, Zhan Lu, Haojie Yan, Boxin Shi, Gang Pan, Qian Zheng, Xudong Jiang        </td>        <td>单位</td>        <td>Nanyang Technological University, Zhejiang University, Peking University</td>    </tr>    <tr>        <td>来源</td>        <td>2024 CVPR</td>        <td>IF/分区/CCF</td>        <td>CCF-A</td>    </tr>    <tr>        <td>类型</td>        <td>会议论文</td>        <td>重要指数</td>        <td>3</td>    </tr>    <tr>        <td>关键词</td>        <td colspan="3">Photometric stereo, Inverse rendering, Light initialization, Interval sampling, Shrinking range computing</td>    </tr>    <tr>        <td rowspan="2">引言</td>        <td>研究背景</td>        <td colspan="3">            <ul>            <li>Optimization-based methods                <ul>                    <li>simple model with with low effectiveness</li>                    <li>solely model the varying lights in each image, the unknowns introduced by the light model may increase with the resolution and numbers of the images, restricting existing methods to low-resolution and insufficient images                </ul>            </li>            <li>Data-driven methods: lack interpretability, making them hard to constrain during training and prone to be affected by the data bias            </li>            </ul>        </td>    </tr>    <tr>        <td>研究问题</td>        <td colspan="3">They acquire images on a <b>rotatable platform</b> under a static environment light, then jointly reconstruct environment light, isotropic reflectance, and shapes</td>    </tr>    <tr>        <td rowspan="2">方法</td>        <td>核心模块</td>        <td colspan="3">            <ul>                <li>Light initialization from boundaries</li>                <li>Shape, material, shadow models</li>                <li>Interval sampling to reduce computational costs</li>                <li>Shrinking range computing to improve convergence</li>            </ul>        </td>    </tr>    <tr>        <td>方法借鉴</td>        <td colspan="3">Get light priors by setup rather than deep learning</td>    </tr>    <tr>        <td rowspan="3">实验</td>        <td>数据集</td>        <td colspan="3">            <ul>                <li>Render the synthetic dataset in Blender</li>                <li>They set up their spin light capture system to collect real data under indoor and outdoor scenes</li>            </ul>        </td>    </tr>    <tr>        <td>对比方法</td>        <td colspan="3">            <ul>                <li>2019_ICCV_Variational uncalibrated photometric stereo under general lighting</li>                <li>2022_CVPR_Universal photometric stereo network using global lighting contexts</li>                <li>2023_CVPR_Scalable, detailed and mask-free universal photometric stereo</li>            </ul>        </td>    </tr>    <tr>        <td>主要结果</td>        <td colspan="3">            <ul>                <li>Synthetic dataset: normal estimation, light estimation</li>                <li>Real dataset: normal estimation</li>        </td>    </tr>    <tr>        <td rowspan="2">思考</td>        <td>创新性</td>        <td colspan="3">Get light priors by a novel setup</td>    </tr>        <td>研究启示</td>        <td colspan="3"></td>    <tr>        <td colspan="2">下一步计划</td>        <td colspan="3"></td>    </tr></table>]]></content>
    
    
    <categories>
      
      <category>Research</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>给极致戴上理智的枷锁</title>
    <link href="/2024/08/02/%E7%BB%99%E6%9E%81%E8%87%B4%E6%88%B4%E4%B8%8A%E7%90%86%E6%99%BA%E7%9A%84%E6%9E%B7%E9%94%81/"/>
    <url>/2024/08/02/%E7%BB%99%E6%9E%81%E8%87%B4%E6%88%B4%E4%B8%8A%E7%90%86%E6%99%BA%E7%9A%84%E6%9E%B7%E9%94%81/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note note-danger">            <p>不懂从什么开始, 我对电脑的<span style="color:yellow">极简</span>操作有一种近乎疯狂的追求. 为平衡 “收益” 与 “成本”, <span style="color:red;font-weight:bold">我决定: 每个月至多用一天, 更新某一个主题的一个细节.</span> 对于没有及时实现的想法, 将会 “记录在案”, 由时间决定其最终的形式.</p>          </div><h1 id="Vim"><a href="#Vim" class="headerlink" title="Vim"></a>Vim</h1><h1 id="AutoHotKey"><a href="#AutoHotKey" class="headerlink" title="AutoHotKey"></a>AutoHotKey</h1><h2 id="知云文献翻译"><a href="#知云文献翻译" class="headerlink" title="知云文献翻译"></a>知云文献翻译</h2><ul><li>Nomal 模式<ul><li>2024-08-02 u: 执行撤消操作</li></ul></li></ul><h1 id="Pycharm"><a href="#Pycharm" class="headerlink" title="Pycharm"></a>Pycharm</h1><h2 id="常规配置"><a href="#常规配置" class="headerlink" title="常规配置"></a>常规配置</h2><h2 id="IdeaVim"><a href="#IdeaVim" class="headerlink" title="IdeaVim"></a>IdeaVim</h2><h1 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h1><h1 id="博客"><a href="#博客" class="headerlink" title="博客"></a>博客</h1><ul><li>2024-08-02<ul><li>科研板块总结两字添加 “文献阅读” 超链接</li><li>将论文阅读笔记模板封装成一个标签</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>Life</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Grocery</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NumPy notes</title>
    <link href="/2024/07/31/Numpy-notes/"/>
    <url>/2024/07/31/Numpy-notes/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><ul><li><a href="https://numpy.org/doc/stable/user/whatisnumpy.html">官方英文</a></li><li><a href="https://numpy.org.cn/user/">中文文档</a></li></ul><h1 id="时间节点"><a href="#时间节点" class="headerlink" title="时间节点"></a>时间节点</h1><ul><li>From 2024-07-31 to ?</li></ul><h1 id="NumPy-介绍"><a href="#NumPy-介绍" class="headerlink" title="NumPy 介绍"></a>NumPy 介绍</h1><ul><li>ndarray: N-dimensional array</li></ul><h1 id="快速入门教程"><a href="#快速入门教程" class="headerlink" title="快速入门教程"></a>快速入门教程</h1><ul><li>花式索引与索引技巧部分较难理解</li></ul><h1 id="NumPy-基础知识"><a href="#NumPy-基础知识" class="headerlink" title="NumPy 基础知识"></a>NumPy 基础知识</h1><h2 id="创建数组"><a href="#创建数组" class="headerlink" title="创建数组"></a>创建数组</h2><ul><li>np.array: 将 Python 中 array-like 结构的数值转换为 ndarray</li><li>np.zeros&#x2F;np.ones: 创建全 1&#x2F;0 ndarray</li><li>np.arange&#x2F;np.linspace: 创建等间隔分布的 ndarray</li></ul><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><ul><li>数组索引返回的是原始数据的副本而不是切片获取的视图</li><li>在程序中处理可变数量的索引<ul><li>Python slice() 函数指定切片</li><li>使用 Elipsis 指定省略号</li></ul></li></ul><h2 id="Brodcasting"><a href="#Brodcasting" class="headerlink" title="Brodcasting"></a>Brodcasting</h2><ul><li>一般广播规则: 从最后一个轴的尺寸开始比较, 依次向前<ul><li>尺寸相等</li><li>其中一个是 1, 取大尺寸</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>Coding</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>闻道有先后</title>
    <link href="/2024/07/27/%E9%97%BB%E9%81%93%E6%9C%89%E5%85%88%E5%90%8E/"/>
    <url>/2024/07/27/%E9%97%BB%E9%81%93%E6%9C%89%E5%85%88%E5%90%8E/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Computer-graphics-and-computer-vision"><a href="#Computer-graphics-and-computer-vision" class="headerlink" title="Computer graphics and computer vision"></a>Computer graphics and computer vision</h1><ul><li><a href="https://apchenstu.github.io/">Anpei Chen (陈安沛)</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>Research</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>科研技能与资源</title>
    <link href="/2024/07/27/%E7%A7%91%E7%A0%94%E6%8A%80%E8%83%BD%E4%B8%8E%E8%B5%84%E6%BA%90/"/>
    <url>/2024/07/27/%E7%A7%91%E7%A0%94%E6%8A%80%E8%83%BD%E4%B8%8E%E8%B5%84%E6%BA%90/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="最常用"><a href="#最常用" class="headerlink" title="最常用"></a>最常用</h1><ul><li>如何判断 arXiv 上的文章是否已经发表?<ul><li>通过 PDF 文件内的注释</li><li>通过 arXiv 页面的 “Comments” 提示</li><li>通过 arXiv 页面的 “Submission history” 的说明</li><li>通过 arXiv 页面提供的 DOI, 访问 <a href="https://dx.doi.org/">resolve doi</a>&#x2F;<a href="https://scholar.google.com/">Google Scholar</a>&#x2F;<a href="https://search.crossref.org/">CrossRef</a> 查找</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>Research</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>年轻人, 你真的很渴望成功吗?</title>
    <link href="/2024/07/17/%E5%B9%B4%E8%BD%BB%E4%BA%BA-%E4%BD%A0%E7%9C%9F%E7%9A%84%E5%BE%88%E6%B8%B4%E6%9C%9B%E6%88%90%E5%8A%9F%E5%90%97/"/>
    <url>/2024/07/17/%E5%B9%B4%E8%BD%BB%E4%BA%BA-%E4%BD%A0%E7%9C%9F%E7%9A%84%E5%BE%88%E6%B8%B4%E6%9C%9B%E6%88%90%E5%8A%9F%E5%90%97/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><span style="color:red;font-weight:bold">如果你真的很渴望成功, 那么请问: </span></p><ul><li>你所做的每件事都是朝着目标前进吗?</li><li>你的每分每秒都用来使自己变得更优秀了吗?</li><li>你的恶习你努力克服了吗?</li></ul><div class="note note-primary">            <p><strong>所以, 你真的很渴望, 很渴望, 很渴望成功吗???</strong></p>          </div>]]></content>
    
    
    <categories>
      
      <category>Life</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Grocery</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Computer Graphics 学习资源</title>
    <link href="/2024/07/12/Computer-Graphics-%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90/"/>
    <url>/2024/07/12/Computer-Graphics-%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Physically-Based-Rendering-from-Theory-to-Implementation"><a href="#Physically-Based-Rendering-from-Theory-to-Implementation" class="headerlink" title="Physically Based Rendering from Theory to Implementation"></a>Physically Based Rendering from Theory to Implementation</h1><ul><li>官网: <a href="https://www.pbrt.org/">pbrt.org</a></li><li>在线电子书: <a href="https://pbr-book.org/4ed/contents">目录</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>Research</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Writing...</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows 那些事儿</title>
    <link href="/2024/07/06/Windows-%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/"/>
    <url>/2024/07/06/Windows-%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="效率提升"><a href="#效率提升" class="headerlink" title="效率提升"></a>效率提升</h1><h2 id="Win-R-运行框"><a href="#Win-R-运行框" class="headerlink" title="Win + R 运行框"></a>Win + R 运行框</h2><p><strong>输入命令后, 按 <code>Ctrl + Shift + Enter</code> 可管理员身份运行</strong></p><p><strong>常用:</strong></p><ul><li>taskmgr: 任务管理器</li><li>control: 控制面板</li></ul><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><h3 id="Win-组合键"><a href="#Win-组合键" class="headerlink" title="Win 组合键"></a>Win 组合键</h3><ul><li><strong>Win + A: 打开操作中心</strong></li><li>Win + B: 将焦点移动到托盘区域</li><li>Win + S&#x2F;Q: 搜索</li><li>Win + I: 设置</li><li>Win + P: 进行投影</li><li>Win + K: 连接无线显示器</li><li>Win + L: 锁屏</li><li>Win + E: 资源管理器</li><li><strong>Win + D: 显示桌面</strong></li><li>Win + ,: 临时速览桌面</li><li>Win + V: 剪切板</li><li><strong>Win +M: 最小化所有窗口</strong></li><li>Win + Shift + M: 还原桌面上的最小化窗口</li><li>Win + ;&#x2F;.: 打开表情符号面板</li><li>Win + T: 循环浏览任务栏上的应用</li><li>Win + 方向键: 窗口缩放</li><li>Win + X: Win 键菜单</li><li>Win + Pause: 打开 “系统属性” 对话框</li></ul><h2 id="虚拟桌面"><a href="#虚拟桌面" class="headerlink" title="虚拟桌面"></a>虚拟桌面</h2><ul><li><code>Win + Tab</code>: 打开任务视图, 可新建和切换虚拟桌面</li><li><code>Win + Ctrl + D</code>: 创建新的虚拟桌面, 并切换</li><li><code>Win + Ctrl + F4</code>: 删除当前虚拟桌面, 并切换到左侧桌面 (相关窗口会自动转移到左侧桌面)</li><li><code>Win + Ctrl + Left/Right</code>: 切换到相邻左&#x2F;右侧桌面</li></ul><h2 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h2><ul><li><code>F6</code>: 循环浏览窗口或桌面上的屏幕元素</li></ul><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1] <a href="https://blog.csdn.net/qq_42402854/article/details/93162387">Charge8. Win10 CMD命令大全与超好用的快捷键[EB&#x2F;OL]</a><br>[2] <a href="https://cheat-sheet.cn/post/windows-10-cheat-sheet/">Windows 10 快捷键速查表</a></p><h1 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h1><h2 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h2><h3 id="终端命令-schtasks"><a href="#终端命令-schtasks" class="headerlink" title="终端命令 schtasks"></a>终端命令 <code>schtasks</code></h3><ul><li>立即启动计划的任务: <code>schtasks /rum /tn &lt;taskname&gt;</code></li><li>列出计划在计算机上运行的所有任务: <code>schtasks [/query] [/tn &lt;taskname&gt;]</code></li></ul><h3 id="定时删除特定时间前的文件和文件夹-forfiles"><a href="#定时删除特定时间前的文件和文件夹-forfiles" class="headerlink" title="定时删除特定时间前的文件和文件夹 forfiles"></a>定时删除特定时间前的文件和文件夹 <code>forfiles</code></h3><ul><li>(CMD 下) 查看 <code>forfiles</code> 帮助信息: <code>forfiles /?</code></li><li>(CMD 下) 查看 <code>rmdir</code> 和 <code>del</code> 帮助信息: <code>help cmd</code></li><li>创建 <code>.bat</code> 脚本<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs commonlisp">@echo off<br>set del_dir=T:\root\Temp\AUTO_DEL <br>set day_ago=3<br><br>:: 删除三天以前的文件<br>ForFiles /p %del_dir% /s /d -%day_ago% /c &quot;cmd /c if @isdir==TRUE (rmdir /q /s @path) else (del /q @path)&quot; 2&gt;nul<br></code></pre></td></tr></table></figure></li><li>创建定时任务, 使用 <code>SYSTEM</code> 帐户执行, <strong>实现隐藏 cmd 窗口</strong></li></ul><h2 id="SSH-服务"><a href="#SSH-服务" class="headerlink" title="SSH 服务"></a>SSH 服务</h2><ol><li>首先在服务端电脑上安装 SSH 服务器: <code>设置</code> → <code>应用</code> → <code>可选功能</code> → <code>添加可选功能</code> →  <code>OpenSSH 服务器</code></li><li>配置 SSH 服务器, 配置文件: <code>C:\ProgramData\ssh\sshd_config</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 可用密钥登陆</span><br>PubkeyAuthentication <span class="hljs-built_in">yes</span><br><span class="hljs-comment"># 对于标准用户</span><br>将客户端生成的公钥内容写入 C:\Users\username\.ssh\authorized_keys 文件<br><span class="hljs-comment"># 对于管理用户</span><br>将客户端生成的公钥内容写入 C:\ProgramData\ssh\administrators_authorized_keys 文件<br></code></pre></td></tr></table></figure></li><li>启动 SSH 服务<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 方法一: Win + R 打开运行窗口 → 输入 services.msc (或者直接在 Windows 搜索框输入 services) → 找到 OpenSSH SSH Server, 右键启动或者重新启动</span><br><span class="hljs-comment"># 方法二: 以管理员身份打开 WindowsTerminal, 运行命令 net [re]start sshd 即可启动 SSH 服务 (停止: net stop sshd)</span><br></code></pre></td></tr></table></figure></li><li>在客户端电脑上安装 SSH <strong>客户端</strong>: 过程类似第一步</li><li>在客户端生成私钥和公钥, 并将公钥内容复制到服务端电脑对应文件中, 参见第二步</li><li>打开 <code>WindowsTerminal</code>, 使用命令 <code>ssh user@ip_addr</code>, 根据提示使用密码或者密钥登陆</li></ol><h2 id="FTP-服务"><a href="#FTP-服务" class="headerlink" title="FTP 服务"></a>FTP 服务</h2><h3 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h3><p>师门有一台专门用于开组会的笔记本, 每次开组会或者组会上都要用 U 盘拷贝汇报文件, 感觉不太方便. 早些时候, 我利用 Windows 的 <em>nearby sharing</em> 功能, 每次都要打开&#x2F;关闭, 不仅速度较慢, 而且对传输距离有要求, 最终弃用了. 于是, 想到校园内大家同在一个大的局域网内, 可以利用 <em>Windows FTP</em> 服务. 即将开组会的笔记本作为服务器, 创建一个用户, 小组成员用该用户向服务器上传文件. </p><p><em>2024-06-30 在师门笔记本上配置成功过, 但其中有些问题没有想清楚 (关于防火墙), 最后能成功感觉有点 “玄学”…所以, 仅将在此过程参考的几个文章标记一下, 方便后期查阅</em></p><ul><li><a href="https://blog.csdn.net/weixin_46081669/article/details/114037504">年轻秃了头. https://blog.csdn.net/weixin_46081669&#x2F;article&#x2F;details&#x2F;114037504. CSDN</a></li><li><a href="Windows%E6%90%AD%E5%BB%BAFTP%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B"><em>翊墨</em>. https://blog.csdn.net/weixin_46081669&#x2F;article&#x2F;details&#x2F;114037504. CSDN</a></li><li><a href="https://blog.csdn.net/Alex_81D/article/details/135296467">Alex_81D. 超详情的Windows搭建FTP服务器教程-（老奶奶来了也能搭好）.CSDN</a></li></ul><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://learn.microsoft.com/zh-cn/windows-server/administration/windows-commands/schtasks">Windows Sever schtasks 命令</a><br>[2] <a href="https://www.cnblogs.com/widows/p/13328291.html">第八种格调的男人. Windows 配置定时任务 和任务无法执行原因分析. 博客园</a><br>[3] <a href="https://blog.csdn.net/macwhirr123/article/details/105148443">tyasdxx. Windows forfiles命令删除N天前文件&amp;文件夹. CSDN</a><br>[4] <a href="https://blog.csdn.net/qq_39188306/article/details/88689224">IT-Andy. windows执行计划任务 隐藏弹窗cmd命令解决办法. CSDN</a><br>[5] <a href="https://blog.csdn.net/duke_ding2/article/details/135662761?spm=1001.2101.3001.6650.3&utm_medium=distribute.pc_relevant.none-task-blog-2~default~YuanLiJiHua~Position-3-135662761-blog-90080815.235%5Ev43%5Epc_blog_bottom_relevance_base7&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~YuanLiJiHua~Position-3-135662761-blog-90080815.235%5Ev43%5Epc_blog_bottom_relevance_base7&utm_relevant_index=4">蓝黑2020. Windows11开启SSH服务. CSDN</a><br>[6] <a href="https://blog.csdn.net/pariese/article/details/111604340">Mr.亮先生. Windows 10 开启ssh服务. CSDN</a><br>[7] <a href="https://learn.microsoft.com/zh-cn/windows-server/administration/openssh/openssh_keymanagement">OpenSSH for Windows 中基于密钥的身份验证. Microsoft.learn</a></p><h1 id="电脑配置"><a href="#电脑配置" class="headerlink" title="电脑配置"></a>电脑配置</h1><h2 id="禁用-Win-开头的快捷捷"><a href="#禁用-Win-开头的快捷捷" class="headerlink" title="禁用 Win 开头的快捷捷"></a>禁用 Win 开头的快捷捷</h2><ol><li>打开注册表</li><li>导航到 <code>Computer\HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced</code></li><li>右键 <code>Advanced</code>, 新建字符串值 <code>DisabledHotkeys</code></li><li>修改值为对应想禁用的键, 比如禁用 <code>Win + H</code>, 则写入 <code>H</code> 即可</li><li><strong>在任务管理器中重启 Explorer.exe 以生效</strong></li></ol><h2 id="配置锁屏后屏幕关闭时间"><a href="#配置锁屏后屏幕关闭时间" class="headerlink" title="配置锁屏后屏幕关闭时间"></a>配置锁屏后屏幕关闭时间</h2><ol><li>打开注册表编辑器, 导航到 <code>Computer\HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\7516b95f-f776-4464-8c53-06167f40cc99\8EC4B3A5-6868-48c2-BE75-4F3044BE88A7</code></li><li>将右侧 <code>Atributes</code> 值由 <code>1</code> 改为 <code>2</code></li></ol><p><em>注: 若已修改过, 可直接跳到步骤 <strong>3</strong></em><br>3. 打开控制面权, 依次导航 <code>Hardware and Sound</code> $\rightarrow$ <code>power options</code> $\rightarrow$ <code>change plan settings</code> $\rightarrow$ <code>change advanced power settings</code> $\rightarrow$ <code>Display</code> $\rightarrow$ <code>console lock display off timeout</code>, 然后设置充电和非充电时 (锁屏后) 熄屏时间</p><h2 id="Win-11-使用经典记事本"><a href="#Win-11-使用经典记事本" class="headerlink" title="Win 11 使用经典记事本"></a>Win 11 使用经典记事本</h2><p><strong>修改注册表</strong></p><h2 id="Win-关闭系统图标"><a href="#Win-关闭系统图标" class="headerlink" title="Win 关闭系统图标"></a>Win 关闭系统图标</h2><p><code>控制面板</code> $\rightarrow$ <code>view by Small icons</code> $\rightarrow$ <code>Notification Area Icons</code> $\rightarrow$ <code>Turn system icons on or off</code></p><h2 id="删除-隐藏资源管理器-视频-图片-…"><a href="#删除-隐藏资源管理器-视频-图片-…" class="headerlink" title="删除&#x2F;隐藏资源管理器 视频, 图片, …"></a>删除&#x2F;隐藏资源管理器 视频, 图片, …</h2><p><strong>定位到注册表: <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions</code></strong>, 找到文件夹对应的项, 将 <code>ThisPCPolicy</code> 字符串的值改为 <code>Hide</code></p><h2 id="Win-11-关闭资源管理器左侧的图库按钮"><a href="#Win-11-关闭资源管理器左侧的图库按钮" class="headerlink" title="Win 11 关闭资源管理器左侧的图库按钮"></a>Win 11 关闭资源管理器左侧的图库按钮</h2><p><strong>定位到注册表: <code>HKEY_CURRENT_USER\Software\Classes\CLSID\&#123;E88865EA-0E1C-4E20-9AA6-EDCD0212C87C&#125;</code></strong>, 修改该项下的 <code>System.IsPinnedToNameSpaceTree</code> 值为 <code>0 (隐藏), 1 (显示)</code></p><h2 id="Win-11-资源管理器右键菜单关闭显示更多"><a href="#Win-11-资源管理器右键菜单关闭显示更多" class="headerlink" title="Win 11 资源管理器右键菜单关闭显示更多"></a>Win 11 资源管理器右键菜单关闭<code>显示更多</code></h2><h2 id="管理-Win-11-开机启动项"><a href="#管理-Win-11-开机启动项" class="headerlink" title="管理 Win 11 开机启动项"></a>管理 Win 11 开机启动项</h2><ul><li>查看已自启的应用: 打开 <code>Windows 设置</code> → 应用 → 启动 (或直接在 <code>搜索框</code> 输入 <code>启动</code></li><li>添加自定义启动程序: <code>Win + R</code> → <code>shell:startup</code> (或直接从资源管理器访问: <code> C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp</code> 或 <code>C:\Users\user_name\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</code>) → 将需要启动的软件快捷方式复制到该文件夹即可</li></ul><h2 id="文件资源管理器右键菜单添加自定义命令"><a href="#文件资源管理器右键菜单添加自定义命令" class="headerlink" title="文件资源管理器右键菜单添加自定义命令"></a>文件资源管理器右键菜单添加自定义命令</h2><ul><li><a href="https://blog.csdn.net/Mrceel/article/details/107459678">参考1</a></li><li><a href="https://blog.csdn.net/weixin_30656145/article/details/97092402#:~:text=%E5%9C%A8Windows%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86%E5%99%A8%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95%E4%B8%AD%E6%B7%BB%E5%8A%A0%E4%B8%80%E9%A1%B9%201%20%E6%89%93%E5%BC%80%E6%B3%A8%E5%86%8C%E8%A1%A8%E7%BC%96%E8%BE%91%E5%99%A8%EF%BC%8C%E5%B1%95%E5%BC%80%20HKEY_CLASSES_ROOT%20-%3E%20*%20-%3E%20shell,%E6%96%B0%E5%BB%BA%20-%3E%20%E9%A1%B9%20%EF%BC%8C%E8%BE%93%E5%85%A5%E9%A1%B9%E5%90%8D%E7%A7%B0%20Command%20%EF%BC%88%E5%BF%85%E9%A1%BB%E4%B8%BA%E6%AD%A4%E5%90%8D%E7%A7%B0%EF%BC%89%EF%BC%8C%E5%9B%9E%E8%BD%A6%E7%A1%AE%E5%AE%9A%EF%BC%9B%20More%20items">参考2</a></li></ul><h2 id="References-1"><a href="#References-1" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://blog.csdn.net/smartinzhou/article/details/128038357">smartinzhou. Windows 禁用指定键盘快捷组合键. CSDN</a><br>[2] <a href="https://www.sysgeek.cn/disable-windows-keyboard-shortcut/">Windows如何禁用部分特定或全部键盘快捷键. 系统极客</a><br>[3] <a href="https://jingyan.baidu.com/article/a17d52851297e18099c8f270.html">Win10锁屏之后屏幕自动关闭怎么办. 百度经验</a><br>[4] <a href="https://www.winhelponline.com/blog/restore-old-classic-notepad-windows/">How to Restore Old Classic Notepad in Windows 11</a><br>[<strong>5</strong>] <a href="https://blog.csdn.net/qq_42558430/article/details/106148840"><strong>方冬_肖. Windows 任务计划不运行 &amp;&amp; 任务计划只运行一次 &amp;&amp; 手动运行任务计划正常 &amp;&amp; 任务计划没有按触发器设定自动运行. CSDN</strong></a><br>[6] <a href="http://xiuchufang.com/JC/22116.html">Win 11 系统之家. 关闭Win11右下角图标的方法(不是隐藏)</a><br>[7] <a href="https://blog.csdn.net/xuwenze1991/article/details/87394105">xuwenze1991. Win10 删除&#x2F;隐藏 文件资源管理器 视频、图片、文档、下载、音乐、桌面、3D对象. CSDN</a><br>[8] <a href="https://www.landiannews.com/archives/101273.html">山外的鸭子哥. 修改注册表删除Windows 11资源管理器左侧中的图库按钮. 蓝点网</a><br>[9] <a href="https://blog.csdn.net/qq_43530326/article/details/128142653#:~:text=%E5%A6%82%E6%9E%9C%E8%A6%81%E7%A6%81%E7%94%A8Win11%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95%E4%B8%AD%E7%9A%84%E6%98%BE%E7%A4%BA%E6%9B%B4%E5%A4%9A%E9%80%89%E9%A1%B9%EF%BC%8C%E9%82%A3%E4%B9%88%E6%88%91%E4%BB%AC%E5%BA%94%E8%AF%A5%E5%85%88%E5%B0%9D%E8%AF%95%E6%9B%B4%E6%94%B9%E2%80%9C%E6%96%87%E4%BB%B6%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86%E5%99%A8%E2%80%9D%E9%80%89%E9%A1%B9%EF%BC%8C%E5%8F%A6%E5%A4%96%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E4%B8%80%E7%82%B9%E6%98%AF%EF%BC%8C%E6%AD%A4%E6%96%B9%E6%B3%95%E8%BF%98%E4%BC%9A%E5%90%8C%E6%97%B6%E5%B0%86%E5%85%B6%E4%BB%96%E5%86%85%E5%AE%B9%E8%BF%98%E5%8E%9F%E5%88%B0%E6%97%A7%E7%9A%84Win10%E6%A0%B7%E5%BC%8F%E3%80%82,%E6%AD%A5%E9%AA%A41%E3%80%81%E6%8C%89Win%2BE%E6%89%93%E5%BC%80%E6%96%87%E4%BB%B6%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86%E5%99%A8%EF%BC%8C%E5%8D%95%E5%87%BB%E4%B8%8A%E6%96%B9%E7%9A%84%E2%80%9C%E6%9F%A5%E7%9C%8B%E2%80%9D%E9%80%89%E9%A1%B9%E5%B9%B6%E5%9C%A8%E4%B8%8B%E6%8B%89%E8%8F%9C%E5%8D%95%E4%B8%AD%E7%82%B9%E5%87%BB%E2%80%9C%E9%80%89%E9%A1%B9%E2%80%9D%E6%8C%89%E9%92%AE%E3%80%82">司徒小夜. win11 右键关闭显示更多选项 修改右键菜单. CSDN</a><br>[10] <a href="https://zhuanlan.zhihu.com/p/446430778">泳者. 管理Win10开机启动项. 知乎</a></p><h1 id="TroubleShotting"><a href="#TroubleShotting" class="headerlink" title="TroubleShotting"></a>TroubleShotting</h1><h2 id="System-exception-端口已被占用"><a href="#System-exception-端口已被占用" class="headerlink" title="System exception 端口已被占用"></a>System exception 端口已被占用</h2><p><strong>Step 1:</strong> 打开 cmd<br><strong>Step 2:</strong> 输入 <code>netstat -aon | findstr &quot;1080&quot; </code>查看占用端口 <em>1080</em> 的进程 <strong>PID</strong><br><strong>Step 3:</strong> 输入 <code>tasklist | findstr pid_str</code>  查看 <em>pid_str</em> 所对应的程序<br><strong>Step 4:</strong> 在任务管理器中寻找程序并停用</p><h2 id="Windows-键失灵"><a href="#Windows-键失灵" class="headerlink" title="Windows 键失灵"></a>Windows 键失灵</h2><ul><li>按 <code>Fn + Win</code> 进行切换</li></ul><h2 id="启动-CMD-提示-“The-system-cannot-find-the-path-specified”"><a href="#启动-CMD-提示-“The-system-cannot-find-the-path-specified”" class="headerlink" title="启动 CMD 提示 “The system cannot find the path specified”"></a>启动 CMD 提示 “The system cannot find the path specified”</h2><ul><li>运行 PowerShell 命令, 检查 <code>PATH</code> 环境变量中所有路径是否存在: <code>@($env:path -split &quot;;&quot;).ForEach(&#123; if($_) &#123;$result = &#39;MISSING |&#39;;if(Test-Path -path $_) &#123; $result = &#39;     OK |&#39;&#125;;-join($result, &#39; &#39;, $_); &#125;&#125;)</code></li><li>检查注册表位置 <em><code>Computer\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Command Processor</code></em> 和 <code>Computer\HKEY_CURRENT_USER\Software\Microsoft\Command Processor</code> 下的 <strong><code>autorun</code></strong> 中的路径是否正确</li></ul><h2 id="磁盘修复"><a href="#磁盘修复" class="headerlink" title="磁盘修复"></a>磁盘修复</h2><h2 id="Ping-不通-GitHub-com"><a href="#Ping-不通-GitHub-com" class="headerlink" title="Ping 不通 GitHub.com"></a>Ping 不通 GitHub.com</h2><ul><li>以管理员身份运行 <code>cmd</code>, 然后在终端输入 <code>cd C:\Windows\System32\drivers\etc</code> 进入 <code>hosts</code> 文件所在目录</li><li>输入 <code>vim hosts</code> 在文件结尾处添加 (或修改) 下面的几行<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Added for GitHub</span><br>140.82.114.3 github.com<br>199.232.69.194 github.global.ssl.fastly.net<br></code></pre></td></tr></table></figure><strong>注:</strong> 对应的 <strong>ip 地址</strong> 可通过 <a href="https://www.ipaddress.com/ip-lookup">IP Lookup</a> 进行查询</li></ul><h2 id="References-2"><a href="#References-2" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://www.technewstoday.com/the-system-cannot-find-the-path-specified/">ABHISHEK SILWAL. 11 Ways to Fix “The System Cannot Find The Path Specified” Error</a><br>[2] <a href="https://www.coder.work/article/7505935">如何修复Windows 10上的 ‘The system cannot find the path specified’ 错误？</a><br>[3] <a href="https://blog.csdn.net/qq_41675812/article/details/114781465">且陶陶º. GitHub.com连接超时问题的解决. CSDN</a><br>[4] <a href="https://www.partitionwizard.com/partitionmagic/the-device-deviceharddisk0dr0-has-a-bad-block.html">Solved: the Device DeviceHarddisk0DR0 has a Bad Block</a><br>[5] <a href="https://www.disktool.cn/content-center/command-prompt-check-disk-6540.html">在Windows中使用磁盘修复命令CHKDSK检查并修复磁盘错误</a></p>]]></content>
    
    
    <categories>
      
      <category>Windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Writing...</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Step by Step</title>
    <link href="/2024/06/30/Step-by-step/"/>
    <url>/2024/06/30/Step-by-step/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>我想我找到了一把做事的万能钥匙: 每次只前进一点, 但保证这一点的 “平稳” 与 “保障” 性</p><p>以写程序为例, 当我有一个想法时, 我早些时候, 通常是参考源代码, “一次性” 实现自己的想法. 这样的做法带来的结果是: 改动之处往往较大, 当程序的运行结果与所想不一致时, 需要验证想法各个部分的正确性. 但单独验证其中一个部分,往往较难, 因为此时程序已经构成一个整体, 给验证增加了难度, 我通常只能 “从头到尾” 读一遍程序, 通常很难找到问题所在, 以致无法确定是想法本身的问题还是程序实现的问题. 经过一系列的尝试, 我发现在实现想法的过程中, 如果能首先将想法与 “参考想法” 进行比较, 并将参考想法作为 STEP 0, 将自己的想法拆解, 分为若个步骤, 一点一点加至 “参考想法”, 那么在跑通 “参考想法” 的源代码之后, 由于每一步的想法相L较上一步的想法变动不是太大, 那么程序的改动也应该不是太大, 从而程序的正确性得到保障, 进而可验证想法的正确性.  </p>]]></content>
    
    
    <categories>
      
      <category>Life</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Grocery</tag>
      
      <tag>Writing...</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>决定你是谁的最强大因素来自你的内心</title>
    <link href="/2024/06/29/%E5%86%B3%E5%AE%9A%E4%BD%A0%E6%98%AF%E8%B0%81%E7%9A%84%E6%9C%80%E5%BC%BA%E5%A4%A7%E5%9B%A0%E7%B4%A0%E6%9D%A5%E8%87%AA%E4%BD%A0%E7%9A%84%E5%86%85%E5%BF%83/"/>
    <url>/2024/06/29/%E5%86%B3%E5%AE%9A%E4%BD%A0%E6%98%AF%E8%B0%81%E7%9A%84%E6%9C%80%E5%BC%BA%E5%A4%A7%E5%9B%A0%E7%B4%A0%E6%9D%A5%E8%87%AA%E4%BD%A0%E7%9A%84%E5%86%85%E5%BF%83/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note note-success">            <p>“你千万别这样想,” 克里博士提高声音说, “你不是愚人金 <sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="黄铁矿, 即看似黄金的物质">[1]</span></a></sup>, 只在特定的光线下才发光. 无论你成为谁, 无论你把自己变成了什么, 那就是你本来的样子. 它一直在你心中. 不是在剑桥, 而是在你心中. 你就是黄金. 回到杨百翰大学, 甚至回到你家乡的那座山, 都不会改变你是谁. 那可能会改变别人对你的看法, 甚至也会改变你对自己的看法——<strong>即使是黄金, 在某些光线下也会显得晦暗——但那只是错觉. 金子一直是金子.</strong>“</p><p style="text-align:right"><i>——你当像鸟飞往你的山</i></p>          </div><p>最近在读<em>你当像鸟飞往你的山</em>, 女主人公塔拉为摆脱原生家庭的影响, 一路披荆斩棘…读到这一段时, 联想自己的经历, 我很庆幸我拥有一个相对作者好太多的原生家庭, 但求学至今, 我发现自己在<span style="color:red;font-weight:bold">自卑, 不配感</span>方面与作者有相似之处. 原生家庭是塔拉飞往自己大山的障碍, 而求学经历, 尤其是高中三年, 造就了我飞往自己大山的障碍——<strong>自信心的丢失</strong>. <strong>我到底是愚人金还是真金?</strong></p><div class="note note-primary">            <p>我将会回忆自己从小学到现在 20 年左右的求学经历, 通过事实找到愚人金还是真金的答案. 但博士时间较紧张, 等此文结束时, 可能已到 7 月中旬. 为保证基本进度, 我将会每天至少写 15 分钟. </p><p>目前脑中的结论: 我当像鸟飞往我的山, 没有任何人或者事可以定义我, 除了我自己</p>          </div><h1 id="Thoughts"><a href="#Thoughts" class="headerlink" title="Thoughts"></a>Thoughts</h1><ul><li>困难之事逃避, 退缩, 一拖再拖 (没有开始的勇气)</li><li>沉湎于过去, 无法及时止损</li></ul><h1 id="小学"><a href="#小学" class="headerlink" title="小学"></a>小学</h1><p>小学就读于村里的 <em>安置小学</em>, 距家大约 2 公里, 所以不用寄宿. 基本是早上去学校上课, 中午回家吃饭, 午休后再去学校, 傍晚放学再回家. 我们小学一年级之前有个学前班, 相当于现在的幼儿园. 我应该是 2002 年秋季上的学前班, 当年的 11 月我就 6 岁了, 所以当我上一年级的时候已经是 7 岁了. 求学这么多年, 和大多数同学相比, “老大哥” 可能不敢当, 但通常都是别人的 “大哥”. 由此, 我想到以前下半年出生的小孩, 上学有点 “亏”, 因为如果我 2001 年就上学前班, 那我后面应该基本都是 “小弟” 了, 但 2001 年秋季的时候我还没到 5 岁, 于是一等就是一年, 造成入学时已经基本 6 岁了…</p><p>小学应该是我顔值, 尤其是表情的巅峰时期. 顔值很好理解, 那时候还没机会长青春痘…至于表情的意思, 我这里主要指的是笑容, 当时的笑容是那么自然与纯真. 小时候, 一位亲戚和我妈妈说的一句话令我至今印象深刻: 苗 (我的乳名), 总是眯笑眯笑的. 而现在, 笑容基本已被皱眉接管…<br>至于成绩, 从某个节点开始, 我的成绩基本一直都是班里前三?. 具体的时间节点, 有点记不太清了, 可能是三年级, 或者更早, 但绝不会晚于三年级. 可以说, 节点之前, 我对学习没有概念 (或者没开窍). 节点之后, 我学习就和自然, 好像也没怎么用功? 结果成绩就很好. 而促使我在节点前后变化的一个主要事件, 我想是有一回我的假期作业基本做, 结果马上要开学了. 当时应该是说作业没做完, 不让报名, 具体是不是这样记不清了, 总之就是我非常的慌, 很慌. 于是, 就疯狂的补作业, 颇有后面上大学时的考前复习风范, 还真是 “从小看到大”…但一个人的力量是有限的, 主要是离开学非常非常近, 我感觉来不及了, 整个人有点恍惚. 这时候, 我的姐姐和妈妈帮我 “还了部分帐”, 终于在开学的时候完成了假期作业. 当时有个情境, 至今想起仍是清晰无比: 傍晚时分, 天刚 “打麻草” (方言, 就是刚有点变黑), 有些闷热. 我, 妈妈, 姐姐在我家 “晒坝” (农村的露天阳台)上, 合力写我的暑期作业. 我当时站着, 一边看着我的妈妈和姐姐帮我写, 一边在柔手指 (应该是当时写累了, 中途休息下), 脸上一幅囧态与忧虑. 我的妈妈则是</p><h1 id="中学"><a href="#中学" class="headerlink" title="中学"></a>中学</h1><h1 id="高中"><a href="#高中" class="headerlink" title="高中"></a>高中</h1><h1 id="本科"><a href="#本科" class="headerlink" title="本科"></a>本科</h1><h1 id="硕士"><a href="#硕士" class="headerlink" title="硕士"></a>硕士</h1><h1 id="现在"><a href="#现在" class="headerlink" title="现在"></a>现在</h1><h1 id="未来"><a href="#未来" class="headerlink" title="未来"></a>未来</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>黄铁矿, 即看似黄金的物质<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Life</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Grocery</tag>
      
      <tag>Writing...</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>当你想要某种东西时, 整个宇宙会合力助你实现愿望</title>
    <link href="/2024/06/27/%E5%BD%93%E4%BD%A0%E6%83%B3%E8%A6%81%E6%9F%90%E7%A7%8D%E4%B8%9C%E8%A5%BF%E6%97%B6-%E6%95%B4%E4%B8%AA%E5%AE%87%E5%AE%99%E4%BC%9A%E5%90%88%E5%8A%9B%E5%8A%A9%E4%BD%A0%E5%AE%9E%E7%8E%B0%E6%84%BF%E6%9C%9B/"/>
    <url>/2024/06/27/%E5%BD%93%E4%BD%A0%E6%83%B3%E8%A6%81%E6%9F%90%E7%A7%8D%E4%B8%9C%E8%A5%BF%E6%97%B6-%E6%95%B4%E4%B8%AA%E5%AE%87%E5%AE%99%E4%BC%9A%E5%90%88%E5%8A%9B%E5%8A%A9%E4%BD%A0%E5%AE%9E%E7%8E%B0%E6%84%BF%E6%9C%9B/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p style="text-align:center;font-weight:bold;font-size:22px">通过<i>牧羊少年奇幻之旅</i> 追寻自己的天命</p><div class="note note-success">            <p>赶驼人边吃椰枣边对男孩说: “我现在活着. 当我吃东西时, 就只管吃; 当我走路时, 就只管走. 如果必须去打仗, 今天死还是明天死对我都一样. 因为<strong>我既不生活在过去, 也不生活在未来, 我只有现在, 它才是我感兴趣的. 如果你能永远停留在现在, 那你将是最幸福的人.</strong> 你会发现沙漠里有生命, 发现天空中有星星, 发现士兵们打仗是因为战争是人类生活的一部分. 生活就是一个节日, 是一场盛大的庆典. 因为<span style="color:red;font-weight:bold">生活永远是, 也仅仅是我们经历的这一刻.</span>“</p>          </div><div class="note note-primary">            <p>不能莽撞行事, 不能失去<strong>耐心</strong>, 耐心是<strong>科研人</strong>首先要具备的品质. 假如做不到这一点, 将看不到前进道路上的预兆. </p>          </div><div class="note note-success">            <p>“主啊, 我不配劳您进我的家, 但您只要说一句话, 我的奴仆即可得救.” <span style="color:red;font-weight:bold"> → 谦卑与信任 → 只要心中有信仰, 奇迹随时都有可能发生</span><br>“做什么并不重要, 世上每个人都在历史上扮演着重要角色, 但通常懵然不知.”</p>          </div><div class="note note-success">            <p>“不能.” 他听到风对他说, “如果我事先告诉你, 你就看不到金字塔了. 它们很壮美, 不是吗?”</p>          </div><div class="note note-success">            <p>“如果我决定留下呢?”</p><p>“你将会是绿洲的顾问. 你会有足够的黄金去购买很多羊和很多骆驼. 你会跟法蒂玛结婚, 而且<span style="color:red;font-weight:bold">第一年</span>你们会生活得很幸福. 你将会热爱沙漠, 将对那五万棵椰枣树中的每一棵都了如指掌. 你会观察到它们如何生长, 如何展示出一个不断变化的世界. 你还会明白越来越多的预兆, 因为沙漠是所有老师中最好的一个.<br><span style="color:red;font-weight:bold">第二年</span>你会记起那一批财宝. 预兆开始不断地提示你这一点, 而你则极力对那些预兆视而不见. 你只运用你的知识去为绿洲和绿洲居民谋福. 部落头领们会因此而感激你. 你的骆驼将为你带来财富和权力.<br><span style="color:red;font-weight:bold">第三年,</span> 预兆会继续向你提示你那财宝和你的天命. 你会整夜整夜地在绿洲踱来踱去, 而法蒂玛将成为一个忧伤的女人, 因为是她使你中断了前进的道路. 但是你还会爱她, 她也爱你. <span style="color:green;font-weight:bold">你会回想起她从未要求你留下, 因为一个沙漠中的女人知道, 应该等待她的男人.</span> 所以, 你不会怪罪她. 但是, <span style="color:blue;font-weight:bold">你会有许多个夜晚在沙漠里和椰枣树间徘徊, 思考着也许当初应该继续前行,</span> 并更加相信自己对法蒂玛的爱. <span style="font-weight:bold">因为促使你留在绿洲的原因, 是你害怕自己再也不会回来.</span> 到这时, 预兆将告诉你, 你的财宝将会永远被埋在地下.<br><span style="color:red;font-weight:bold">第四年,</span> 预兆将会放弃你, 因为你不再理会它们. 部落头领们将会明白这一点, 而你的顾问一职将被解除. 到那时, 你将成为富商. 拥有很多骆驼和货物. 但是, 你的余生都将在沙漠和椰枣树之间游荡, 你明白自己没有完成天命, 那时再想去做, 已经为时晚矣.<br><span style="color:green;font-weight:bold">你将永远不明白, 爱情从来不会阻止一个男人去追寻天命. 如果会阻止, 一定因为那不是真正的爱情, 不是用宇宙语言表达的爱情.”</p>          </div>]]></content>
    
    
    <categories>
      
      <category>Life</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Grocery</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Miniconda 命令与配置</title>
    <link href="/2024/06/26/Miniconda-%E5%91%BD%E4%BB%A4%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    <url>/2024/06/26/Miniconda-%E5%91%BD%E4%BB%A4%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h1><ul><li>查看配置信息: <code>conda info</code> 或 <code>conda config --show</code></li></ul><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><ul><li>ubuntu 定义环境保存位置<ul><li>临时定义: <code>export CONDA_ENVS_DIRS=&quot;/path/to/dir1:/path/to/dir2&quot;</code></li><li>永久定义: 在 <code>.bashrc</code> 或者 <code>.zshrc</code> 中写入 <code>export CONDA_ENVS_DIRS=&quot;/path/to/dir1:/path/to/dir2&quot;</code></li></ul></li></ul><h1 id="环境管理与迁移"><a href="#环境管理与迁移" class="headerlink" title="环境管理与迁移"></a>环境管理与迁移</h1><ul><li><p>彻底删除环境: <code>conda remove -n env_name --all</code></p></li><li><p><span style="color:red"><strong>conda</strong> 导出环境配置: <code>conda env export -n env_name -f env.yaml</code> (适用于大多数包用 conda 安装)</span></p></li><li><p><span style="color:green"><strong>pip</strong> 导出环境中所有通过 pip 安装的包: <code>pip freeze &gt; requirements.txt</code> (适用于大多数包用 pip 安装)</span></p></li><li><p><span style="color:red"><strong>conda</strong> 从配置文件中创建环境: <code>conda env create -f env.yaml [--force]</code></span></p><ul><li>运行命令前需更改文件 <code>env.yaml</code> 最后一行的 <code>prefix</code></li><li>命令同时安装 conda 和 pip 安装过的包, 对于个别 pip 信赖项若提示安装失败, 可删除 <code>env.yaml</code> 的对应行, 重新运行命令, 最后再用 <code>pip install</code> 单独安装</li></ul></li><li><p><span style="color:green"><strong>pip</strong> 从配置文件中安装包: <code>pip install -r requirements.txt</code></span></p><ul><li>运行命令前需先创建环境 (注意指定 Python 版本) 并激活</li><li>若还有 conda 命令安装的包, 需用 <code>conda install</code> 单独安装</li></ul></li><li><p><span style="color:yellow">直接复制 <code>envs/env_name</code> 实行环境迁移 (适用于 conda 和 cuda 版本一致)</span></p></li><li><p>高效文件迁移命令: <code>scp -r [-q] local_file user@host:/path/to/target</code> 或者 <code>scp -r [-q] user@host:/path/to/copy /path/to/local</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">-r:</span> <span class="hljs-string">递归复制整个目录。</span><br><span class="hljs-string">-P</span> <span class="hljs-attr">port:</span> <span class="hljs-string">指定</span> <span class="hljs-string">SSH</span> <span class="hljs-string">连接的端口。</span><br><span class="hljs-string">-i</span> <span class="hljs-attr">identity_file:</span> <span class="hljs-string">指定私钥文件用于身份验证。</span><br><span class="hljs-string">-v:</span> <span class="hljs-string">显示详细的调试信息。</span><br><span class="hljs-string">-q:</span> <span class="hljs-string">禁止显示进度信息和错误信息</span><br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>Others</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Writing...</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SSH (Secure Shell) 配置与命令</title>
    <link href="/2024/06/26/SSH-Secure-Shell-%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%91%BD%E4%BB%A4/"/>
    <url>/2024/06/26/SSH-Secure-Shell-%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h1><h2 id="密钥配置"><a href="#密钥配置" class="headerlink" title="密钥配置"></a>密钥配置</h2><ul><li>重置密码短语: <code>ssh-keygen -p -f ~/.ssh/id_rsa</code> (<code>id_rsa</code> 根据具体情况替换)</li></ul><h2 id="登陆命令"><a href="#登陆命令" class="headerlink" title="登陆命令"></a>登陆命令</h2><ul><li>登陆到远程主机: <code>ssh user@remote_host_ipORdomain</code></li><li>登陆时指定 <code>bash</code> 配置文件: <code>ssh -t user@remote_host &#39;bash --rcfile /path/to/custom_.bashrc</code></li><li>登陆时指定 <code>zsh</code> 配置文件: <code>ssh -t use@remote_host &#39;exec -l -c &quot;source /path/to/custom_.zshrc; zsh&quot;&#39;</code></li></ul><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>若没有特殊说明表示在 <code>~/.ssh/config</code> 文件中添加内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">Host custom_host_name  <span class="hljs-comment"># 别名</span><br>    HostName host_ip_or_dormain  <span class="hljs-comment"># 主机 IP 或者域名</span><br>    User username  <span class="hljs-comment"># 用户名</span><br>    Port port  <span class="hljs-comment"># 默认 22</span><br>    PreferredAuthentications publickey  <span class="hljs-comment"># 优先使用公钥认证</span><br>    IdentityFile ~/.ssh/id_rsa  <span class="hljs-comment"># 私钥文件路径</span><br>    RemoteCommand bash --rcfile /path/to/custom_bashrc  <span class="hljs-comment"># 登陆时执行命令</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Others</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Writing...</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>国华学子当以奉献社会为终生追求</title>
    <link href="/2024/06/23/%E5%9B%BD%E5%8D%8E%E5%AD%A6%E5%AD%90%E5%BD%93%E4%BB%A5%E5%A5%89%E7%8C%AE%E7%A4%BE%E4%BC%9A%E4%B8%BA%E7%BB%88%E7%94%9F%E8%BF%BD%E6%B1%82/"/>
    <url>/2024/06/23/%E5%9B%BD%E5%8D%8E%E5%AD%A6%E5%AD%90%E5%BD%93%E4%BB%A5%E5%A5%89%E7%8C%AE%E7%A4%BE%E4%BC%9A%E4%B8%BA%E7%BB%88%E7%94%9F%E8%BF%BD%E6%B1%82/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>好久没想起或者听到这句话了: <span style="color:red;font-weight:bold">“国华学子当以奉献社会为终生追求”</span>. </p><p>前两天高中母校发了一个问卷星, 征集已毕业学生的善举与贡献, 其中的副标题即为 “国华学子当以奉献社会为终生追求”, 唤起了高中母校在我身上烙上的”国华人”烙印.</p><p>2015 年从母校毕业, 距今已有 9 年. 而面对该问卷, 我却无法给出一个满意的回答, 实仍有负母校三年的教育与毕业后的资助. 倒不是问卷的难度有多大, 而是毕业这些年, 我基本忘了”国华学子当以奉献社会为终生追求”的理念, 而该问卷就是基于该理念而设计. 我是国华人啊! 国华人啊! 国华人啊!</p>    <div class="fold">      <div class="fold-title fold-info collapsed" data-toggle="collapse" href="#collapse-f4be53b7" role="button" aria-expanded="false" aria-controls="collapse-f4be53b7">        <div class="fold-arrow">▶</div>国华校友的善举与贡献      </div>      <div class="fold-collapse collapse" id="collapse-f4be53b7">        <div class="fold-content">          <ol><li>你的姓名与届别</li><li>你所追求的哪些理想, 愿望在后来的学习, 工作中实现了?</li><li>请分享 1-2 件自己非常自豪, 为这个社会真正做了一点事的经历 (哪怕很小的事, 都可以)</li><li>请分享几件你身边或者你听说的国华校友的某个善举或者为社会做出的一点贡献, 亦或是 ta 身上的某种品质, 某种追求特别令你感动的事迹</li></ol>        </div>      </div>    </div>]]></content>
    
    
    <categories>
      
      <category>Life</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Grocery</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WEEK 24 Come on!</title>
    <link href="/2024/06/16/WEEK-24-Come-on/"/>
    <url>/2024/06/16/WEEK-24-Come-on/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="文献阅读"><a href="#文献阅读" class="headerlink" title="文献阅读"></a>文献阅读</h1>]]></content>
    
    
    <categories>
      
      <category>Research</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>LaTeX 常用命令</title>
    <link href="/2024/06/11/LaTeX-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2024/06/11/LaTeX-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h1><h2 id="基本符号"><a href="#基本符号" class="headerlink" title="基本符号"></a>基本符号</h2><ul><li>乘号 $\times$: <code>\times</code></li><li>星号 $\ast$: <code>\ast</code></li><li>点乘 $\cdot$: <code>\cdot</code></li><li>约等于 $\approx$: <code>\approx</code></li></ul><h2 id="分段函数"><a href="#分段函数" class="headerlink" title="分段函数"></a>分段函数</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;equation&#125;<br>    sgn<span class="hljs-keyword">\left</span>(x<span class="hljs-keyword">\right</span>)=<span class="hljs-keyword">\left</span><span class="hljs-keyword">\&#123;</span><br>        <span class="hljs-keyword">\begin</span>&#123;array&#125;&#123;ll&#125;  <span class="hljs-comment">% 每一列均左对齐</span><br>            1, <span class="hljs-built_in">&amp;</span> <span class="hljs-keyword">\quad</span> x&gt;0 <span class="hljs-keyword">\\</span><br>            0, <span class="hljs-built_in">&amp;</span> <span class="hljs-keyword">\quad</span> x=0 <span class="hljs-keyword">\\</span><br>            -1, <span class="hljs-built_in">&amp;</span> <span class="hljs-keyword">\quad</span> x&lt;0 <span class="hljs-keyword">\\</span><br>        <span class="hljs-keyword">\end</span>&#123;array&#125;<br>    <span class="hljs-keyword">\right</span>.<br><span class="hljs-keyword">\end</span>&#123;equation&#125;<br></code></pre></td></tr></table></figure><h1 id="其它命令"><a href="#其它命令" class="headerlink" title="其它命令"></a>其它命令</h1><ul><li>自定义括号大小: <code>\big, \Big, \bigg, \Bigg</code></li></ul><h1 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h1><h2 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a>Requirements</h2><ul><li>TexLive</li></ul><h2 id="将-pdf-文件转换为-eps-文件"><a href="#将-pdf-文件转换为-eps-文件" class="headerlink" title="将 .pdf 文件转换为 .eps 文件"></a>将 <code>.pdf</code> 文件转换为 <code>.eps</code> 文件</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs latex">pdftops -eps source.pdf target.eps<br><span class="hljs-comment">% .bat 文件批量转换</span><br><br></code></pre></td></tr></table></figure><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><ul><li><a href="https://blog.csdn.net/subtitle_/article/details/129392994">小林up. LaTex使用技巧15：LaTex命令行转换pdf和eps. CSDN</a></li><li><a href="https://blog.csdn.net/jeryjeryjery/article/details/88970357">liuwei1206. Texlive中jpg和pdf转成eps. CSDN</a></li><li><a href="https://pencilq.com/64/">小铅笔 &amp; Jeff. 通过LaTeX发行版直接转换和查看EPS</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>Others</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Visio 学习积累</title>
    <link href="/2024/06/11/Visio-%E5%AD%A6%E4%B9%A0%E7%A7%AF%E7%B4%AF/"/>
    <url>/2024/06/11/Visio-%E5%AD%A6%E4%B9%A0%E7%A7%AF%E7%B4%AF/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="文件转-pdf"><a href="#文件转-pdf" class="headerlink" title="文件转 .pdf"></a>文件转 .pdf</h1><ul><li>去除多余的白边 <sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="[强殖装甲凯普. 最简单Visio导出无边框无白边pdf. CSDN](https://blog.csdn.net/qq_38163755/article/details/111690961)">[1]</span></a></sup><ul><li>设计 → 大小 → 适应绘图</li><li>按住 <code>Ctrl</code> → 使用鼠标拖动画布边缘调整画布大小</li></ul></li><li>去除黑边<ul><li>在导出 pdf 时, 点击 <code>选项</code> → 取消勾选 <code>辅助功能文档结构标记</code></li></ul></li></ul><h1 id="复制粘贴"><a href="#复制粘贴" class="headerlink" title="复制粘贴"></a>复制粘贴</h1><ul><li>直接复制粘贴: <code>Ctrl + D</code></li><li>常规复制粘贴: <code>Ctrl + C</code> → <code>Ctrl + V</code> (默认在原对象右下角粘贴; 若粘贴前在任意位置点击, 则在点击位置粘贴)</li><li>拖动复制: <code>按住 Ctrl 键</code>, 鼠标左键拖动复制 (若同时按住 <code>Shift</code> 键, 则进行水平或者垂直对齐的复制)</li><li>等距复制: 复制一次之后, 每按一次 <code>F4</code>, 则等距复制一次</li></ul><h1 id="移动"><a href="#移动" class="headerlink" title="移动"></a>移动</h1><ul><li>微小移动: 选中形状之后, 先按住 <code>Shift</code>, 再按方向键进行移动</li></ul><h1 id="形状改变"><a href="#形状改变" class="headerlink" title="形状改变"></a>形状改变</h1><ul><li>[非]等比例改变: 按住 <code>Shift</code>, 再拖动控制点</li></ul><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://blog.csdn.net/qq_38163755/article/details/111690961">强殖装甲凯普. 最简单Visio导出无边框无白边pdf. CSDN</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Software</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>所谓的科研能力到底要怎么培养?</title>
    <link href="/2024/06/04/%E6%89%80%E8%B0%93%E7%9A%84%E7%A7%91%E7%A0%94%E8%83%BD%E5%8A%9B%E5%88%B0%E5%BA%95%E8%A6%81%E6%80%8E%E4%B9%88%E5%9F%B9%E5%85%BB/"/>
    <url>/2024/06/04/%E6%89%80%E8%B0%93%E7%9A%84%E7%A7%91%E7%A0%94%E8%83%BD%E5%8A%9B%E5%88%B0%E5%BA%95%E8%A6%81%E6%80%8E%E4%B9%88%E5%9F%B9%E5%85%BB/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>最近两个周在写点光源逆向渲染的一个小论文, 发现用 (英) 文字表达自己的想法 “寸步难行”. 其中的原因可能有以下几点: </p><ul><li>对逆向渲染领域的基础知识 (尤其是一些原理和术语)</li><li>…</li></ul><p>这个事让我想到: 到底要怎样训练才能有针对性地培养这种科研写作能力? 或者从更高的角度来思考: 所谓的科研能力有哪些? 又要怎么培养?</p><h1 id="Method"><a href="#Method" class="headerlink" title="Method"></a>Method</h1><h2 id="转换科研思路"><a href="#转换科研思路" class="headerlink" title="转换科研思路"></a>转换科研思路</h2><p>以撰写科研文章为例, 承认自己目前确实不擅长甚至不会写, 所以在写作的过程中不以一种苛求或者批判的视角来看待所写内容, 而是抱着一种学习的心态, 只是尽可能地写, 至于写成什么样, 不过多要求, 但需要尽最大努力. </p><h2 id="平常心对待他人的修改意见"><a href="#平常心对待他人的修改意见" class="headerlink" title="平常心对待他人的修改意见"></a>平常心对待他人的修改意见</h2><p>在撰写完成后, 不可避免地会将文章发给导师, 请其给出修改意见, 而后继续修改. 在这之中, 不要因为导师修改意见的多寡而自暴自弃或沾沾自喜, 而是平常心对待修改意见, 合理吸收可取之处, 然后进行修改. </p><h2 id="阅读积累"><a href="#阅读积累" class="headerlink" title="阅读积累"></a>阅读积累</h2><p>所谓书读百遍, 其义自现. 在产出之前, 积累至关重要. 所以我决定这次论文提交后, 务必保证<span style="color:red;font-weight:bold">每天阅读一篇文献</span>, 然后向两篇, 三篇每天迈进. </p><h2 id="写作刻意练习"><a href="#写作刻意练习" class="headerlink" title="写作刻意练习"></a>写作刻意练习</h2><p>对于每天或者每周读的文献, 进行规范总结: 想象自己就是论文的作者, 然后按照 CVPR 论文的格式撰写文章 (一部分)</p><h1 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h1><p>针对如何提升科研写作能力, 本文提出了几个主观且未经检验的方法</p>]]></content>
    
    
    <categories>
      
      <category>Research</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Grocery</tag>
      
      <tag>Writing...</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WEEK 22 Writing For TIRPL</title>
    <link href="/2024/06/02/WEEK-22-Writing-For-TIRPL/"/>
    <url>/2024/06/02/WEEK-22-Writing-For-TIRPL/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Work-related-to-Research"><a href="#Work-related-to-Research" class="headerlink" title="Work related to Research"></a>Work related to Research</h1><ul><li>writing the parts of abstract, introduction, related work, limitations, and conclusion for TIRPL</li></ul><h1 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h1><ul><li>take 1&#x2F;3 time for site building of blog</li><li>take 1&#x2F;3 time to adjust the physiological and mental state (get rid of emo…)</li></ul>]]></content>
    
    
    <categories>
      
      <category>Research</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>慢一点, 再慢点</title>
    <link href="/2024/06/01/%E6%85%A2%E4%B8%80%E7%82%B9-%E5%86%8D%E6%85%A2%E7%82%B9/"/>
    <url>/2024/06/01/%E6%85%A2%E4%B8%80%E7%82%B9-%E5%86%8D%E6%85%A2%E7%82%B9/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>慢一点, 再慢一点, 咱们就只做一件事: 静心科研, 早日毕业</p><p>只做科研这一件事, 不去想以后毕业了去哪去哪, 也不去想怎么谈对象, <code>至2024年6月1日起, 不再主动加本校女生微信, 科研累了, 只做下面几件事:</code></p><ul><li>睡觉</li><li>阅读, 冥想, 跑步, 写作</li><li>求圣</li><li>练字, 影视剪辑</li></ul><div class="note note-primary">            <p>倒不是对自己多么狠, 一定一定要怎么样, 我只想竭尽全力, 沉下心来努力一把, 看自己能做到什么程度. 这是我自己的人生, 我是主角, 或好或坏, 与旁人无关</p>          </div><p>六一儿童节快乐!</p>]]></content>
    
    
    <categories>
      
      <category>Life</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Grocery</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>至此, 个人博客终于基本完成</title>
    <link href="/2024/05/29/%E8%87%B3%E6%AD%A4-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BB%88%E4%BA%8E%E5%9F%BA%E6%9C%AC%E5%AE%8C%E6%88%90/"/>
    <url>/2024/05/29/%E8%87%B3%E6%AD%A4-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BB%88%E4%BA%8E%E5%9F%BA%E6%9C%AC%E5%AE%8C%E6%88%90/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在不断地折腾下, 我的博客终于基本完成. 若以买房为喻, 即现在已经装修好, 剩下的就是怎么买家具充实屋子. 其中的装修理念主要有下面几点: </p><ul><li>界面的完整性, 涵盖生活与学习等板块</li><li>界面的美观与精简性, 但不失浏览的方便性</li><li>界面小彩蛋!!!</li></ul><p>主要不足之处: 对 <code>.js, .ejs</code> 相关的编程语言不熟, 导致完善时修改了 Fluid 主题文件, 将给后期主题更新带来些许麻烦</p><p>完善过程中, 花了我较多的时间和精力, 感觉与 Fluid 主题: <code>简洁至上, 以简约的设计帮助作者专注于写作</code>的理念相违背, 这便是我: 完美主义兼顔值党的代价. 正所谓, <code>好看的皮囊千篇一律, 有趣的灵魂万里挑一</code>, 所以后期我将专注于写作. 在此, 我立下 <span style="color:red;font-weight:bold">Flag</span>: </p><div class="note note-danger">            <p><strong>至2024-05-29起, 对于博客网页的完善频率<u>每个月不超过1次</u>, 我承诺把时间和精力用在写作上.</strong></p>          </div>]]></content>
    
    
    <categories>
      
      <category>Life</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Grocery</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WEEK 21 codes of irsdf and point light</title>
    <link href="/2024/05/26/WEEK-21-codes-of-irsdf-and-point-light/"/>
    <url>/2024/05/26/WEEK-21-codes-of-irsdf-and-point-light/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Work-review"><a href="#Work-review" class="headerlink" title="Work review"></a>Work review</h1><ul><li>irsdf<br>After 60,000 iterations (about 21h), PSNR: 19.39 (have converged)<br>loss: 0.0707, volume_loss: 0.0291, <strong>surface_loss: 0.0393</strong></li></ul><div class="note note-info">            <p><strong>neilfpp</strong></p><ul><li>iteration: 8,000+8,000+80,000</li><li>time: 22h</li><li>loss: 0.0764</li><li>PSNR: 24.6657</li></ul>          </div><ul><li>point light</li></ul><h1 id="Plans"><a href="#Plans" class="headerlink" title="Plans"></a>Plans</h1><ul><li>point light<ul><li>abstract (deadline: May 31)</li><li><em>neilfpp</em> as comparision</li><li>main body (deadline: June 7 ← <strong>June 2</strong>)</li></ul></li><li>codes of irsdf</li><li>recent advances in reverse rendering</li></ul><h1 id="Remarks"><a href="#Remarks" class="headerlink" title="Remarks"></a>Remarks</h1><ul><li>the V100 server</li></ul>]]></content>
    
    
    <categories>
      
      <category>Research</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>PyCharm 配置与技巧</title>
    <link href="/2024/05/25/PyCharm-%E9%85%8D%E7%BD%AE%E4%B8%8E%E6%8A%80%E5%B7%A7/"/>
    <url>/2024/05/25/PyCharm-%E9%85%8D%E7%BD%AE%E4%B8%8E%E6%8A%80%E5%B7%A7/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="常用参考文献"><a href="#常用参考文献" class="headerlink" title="常用参考文献"></a>常用参考文献</h1><ul><li><a href="https://www.jetbrains.com/help/pycharm/working-with-source-code.html">PyCharm 官方文档</a></li></ul><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h1 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h1><h2 id="自定义代码折叠"><a href="#自定义代码折叠" class="headerlink" title="自定义代码折叠"></a>自定义代码折叠</h2><ul><li>选中需要折叠的代码 → 菜单栏 <code>代码</code> → <code>包围方式</code> → <code>任选其中一个包围方式 [Ctrl + Alt + T]</code></li></ul><h2 id="文件对比"><a href="#文件对比" class="headerlink" title="文件对比"></a>文件对比</h2><ul><li>激活当前文件 → 菜单栏 <code>视图</code> → <code>比较对象</code> → 选择要对比的文件</li></ul><h1 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h1><ul><li>HOCON: <code>.conf</code> 文件扩展支持</li></ul>]]></content>
    
    
    <categories>
      
      <category>Software</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Writing...</tag>
      
      <tag>PyCharm</tag>
      
      <tag>Custom</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Win10 重装与初始配置</title>
    <link href="/2024/05/23/Win10-%E9%87%8D%E8%A3%85%E4%B8%8E%E5%88%9D%E5%A7%8B%E9%85%8D%E7%BD%AE/"/>
    <url>/2024/05/23/Win10-%E9%87%8D%E8%A3%85%E4%B8%8E%E5%88%9D%E5%A7%8B%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Win10-安装"><a href="#Win10-安装" class="headerlink" title="Win10 安装"></a>Win10 安装</h1><ul><li>强烈建议安装<strong>专业版</strong>(使用远程连接功能) </li><li>可先跳过激活, 直接安装</li><li>在选择系统安装位置时, 先删除所有的磁盘分区, 然后选择其中一块磁盘安装, 方便后期对磁盘分区</li><li>用户名建议<strong>务必</strong><span class="label label-danger">使用不带空格的英文名</span>, 同时建议不要登陆 Microsoft 帐户</li></ul><h1 id="Win10-初始化"><a href="#Win10-初始化" class="headerlink" title="Win10 初始化"></a>Win10 初始化</h1><h2 id="专业版激活"><a href="#专业版激活" class="headerlink" title="专业版激活"></a>专业版激活</h2><p><code>设置</code> → <code>更新与安全</code> → <code>激活</code> → <code>更改产品密钥</code></p><h2 id="磁盘分区"><a href="#磁盘分区" class="headerlink" title="磁盘分区"></a>磁盘分区</h2><p>假设电脑存在两块磁盘, C 盘通常为系统盘, 不进行分区; 下述分区主要针对非系统磁盘</p><ul><li>将磁盘分为两个分区, 分别为 E (APP) 和 F (Files)<ul><li>E 分区为后续软件的安装位置, 根据使用软件的数量设置为总空间的 [1&#x2F;3, 2&#x2F;3]. 若有选择困难症, 可设为 1&#x2F;2</li><li>F 分区为个人文件存放位置, 在分好 E 区之后, 直接分配剩下的空间即可</li><li><span class="label label-success">若电脑有三块磁盘, 可 E 和 F 区各分配一块磁盘</span></li></ul></li><li>E 区文件目录参考<ul><li>Program Files: 64 位软件安装位置</li><li>Program Files (x86): 32 位软件安装位置</li><li>Programs: 安装路径不能有空格的软件的安装位置</li><li>Portable: 存放免安装的应用软件</li><li>APP_files: 存放各个软件可能用(产生)的文件</li><li>Packages: 存放软件安装包, 安装完软件后可删除, 也可保留方便重安装</li><li>QuickStart: 各个软件的快捷方式, 并以方便自己记忆的<strong>字母</strong>缩写命名(建议不要超过4个字符), 例: 腾讯会议 → txhy</li></ul></li><li>F 区文件目录参考<ul><li>files: 存放常用文件, 比如下设 Photos 目录保存图片</li><li>root: 工作目录, 于我来说为与编程相关的文件保存位置</li><li>Temp: 临时文件存放位置, 可定期删除, 也可下设 AUTO_DEL 目录, 使用 Windows 任务计划程序自动删除</li></ul></li></ul><h2 id="基本个性化"><a href="#基本个性化" class="headerlink" title="基本个性化"></a>基本个性化</h2><ul><li>右键任务栏, 取消大多数不需要的固定或者显示</li><li>设置壁纸: 从网上下载一张喜欢的壁纸, 保存为 <code>F:\files\Photos\wall_paper_name</code>, 然后选择</li><li>颜色: 深色模式, 开启透明效果, 主题色选择灰色</li><li>桌面显示 <code>此电脑</code> 图标(我一般将其改名为 <code>我的电脑</code>)</li></ul><h2 id="Edge-基本配置"><a href="#Edge-基本配置" class="headerlink" title="Edge 基本配置"></a>Edge 基本配置</h2><ul><li>设置主题为深色模式</li><li>设置文件下载位置: <code>E:\App_files\Edge</code></li><li>安装去广告插件: AdGuard AdBlocker</li><li>Edge 详细配置可参考 <a href="/2024/05/05/Microsoft-Edge-%E4%BD%BF%E7%94%A8/">Microsoft Edge 使用技巧</a></li></ul><h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><ul><li>软件管家: 360安全卫士 or 微软电脑管理?</li><li>压缩: 7-zip</li><li>通讯: 微信, QQ</li><li>文本编辑: GVIM</li><li>编程: Miniconda</li></ul><h1 id="进阶配置"><a href="#进阶配置" class="headerlink" title="进阶配置"></a>进阶配置</h1><ul><li><span class="label label-success">Win + R 快速启动任意软件 (与 E 盘下的 QuickStart 相对应)</span></li><li>GVIM 配置</li><li>Edge 同步与插件安装</li><li>自定义键盘映射: AutoHotKey 使用</li></ul><h1 id="Temm-专属配置"><a href="#Temm-专属配置" class="headerlink" title="Temm 专属配置"></a>Temm 专属配置</h1><ul><li>Programmer Dvorak 键盘而局, 参考 <a href="/2023/07/08/Programmer-Dvorak-Layout-Anywhere/">pdv anywhere</a></li><li>输入法: 微软五笔输入法词库自定义, Rime 输入法</li></ul>]]></content>
    
    
    <categories>
      
      <category>Windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Custom</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>人生苦短, 当尽力只做对自己重要或者感兴趣的事</title>
    <link href="/2024/05/16/%E4%BA%BA%E7%94%9F%E8%8B%A6%E7%9F%AD-%E5%BD%93%E5%B0%BD%E5%8A%9B%E5%8F%AA%E5%81%9A%E5%AF%B9%E8%87%AA%E5%B7%B1%E9%87%8D%E8%A6%81%E6%88%96%E8%80%85%E6%84%9F%E5%85%B4%E8%B6%A3%E7%9A%84%E4%BA%8B/"/>
    <url>/2024/05/16/%E4%BA%BA%E7%94%9F%E8%8B%A6%E7%9F%AD-%E5%BD%93%E5%B0%BD%E5%8A%9B%E5%8F%AA%E5%81%9A%E5%AF%B9%E8%87%AA%E5%B7%B1%E9%87%8D%E8%A6%81%E6%88%96%E8%80%85%E6%84%9F%E5%85%B4%E8%B6%A3%E7%9A%84%E4%BA%8B/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p style="text-indent:2em">这学期开学将近一个月之后, 带同组一位硕士师弟做自己研究方向的一个小问题. 从现在来看, 时常感到: 在最无能为力的时候, 选择给人指导, 实在不明智. </p><p style="text-indent:2em">我自己是一个较真且完美主义的人, 对一件事要么不做, 做就要做到最好. 夸张点说: 对于我认真的事, 结果在我眼里只有 0 分和 100 分. 加之我又是一个宁可天下人负我, 不可我负天下人的老实人. 对于答应别人的事, 往往看得比自己的事重要. 所以, 在指导师弟的过程中, 自我感觉还算尽责, 该给的指导我都给了, 因为我对无人指导自己瞎学一通的体会实在太深了. 但这过程中, 我也深深地感受到自己无法兼顾自己的科研和对师弟的指导, 雪上加霜的是: 师弟研究的问题也不是我想做的科研问题 (说实话, 我觉得这个问题对博士来说没有多大研究的意义), 尽管该问题和我的研究方向相关甚至是我提出的. <b>于是, 在这种把精力放在了自己不感兴趣的事上, 却无法做好对自己重要且感兴趣的事上时, 我内心的熵极度增加, 导致了或多或少的内耗, 抑郁.</b></p><p style="text-indent:2em">就目前的情况来说, 只得继续在这样一种矛盾的状态中寻找一种平衡. 毕竟答应了别人的事, 就要努力做到. 尤其我这位师弟还非常好学, 很有干劲, 能力也很好 (可以说我提到过的点, 他都能完成), 我实在不能抹杀这样一种对科研或者做事的态度. 这种苦我硕士亲身体会过, 对人的负面影响非常大. </p><p style="text-indent:2em">那以后的人生又该怎么办, 从这次或者说是以往的类似经历中, 提炼出下面几点经验: <div class="note note-primary">            <ul><li>不在能力不足或者自己生活一团乱麻时, <strong>轻易</strong>答应帮人或者给人指导</li><li>对于需要花费较长时间或者较多金钱的事, 不要轻易做决择, <strong>三思再三思</strong></li><li>人生苦短, 请尽可能<strong>只做对自己重要或者是自己感兴趣的事</strong></li></ul>          </div></p>]]></content>
    
    
    <categories>
      
      <category>Life</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Grocery</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>有那么一刻觉得几毛钱花得特别值</title>
    <link href="/2024/05/15/%E6%9C%89%E9%82%A3%E4%B9%88%E4%B8%80%E5%88%BB%E8%A7%89%E5%BE%97%E5%87%A0%E6%AF%9B%E9%92%B1%E8%8A%B1%E5%BE%97%E7%89%B9%E5%88%AB%E5%80%BC/"/>
    <url>/2024/05/15/%E6%9C%89%E9%82%A3%E4%B9%88%E4%B8%80%E5%88%BB%E8%A7%89%E5%BE%97%E5%87%A0%E6%AF%9B%E9%92%B1%E8%8A%B1%E5%BE%97%E7%89%B9%E5%88%AB%E5%80%BC/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note note-primary">            <b>事情或事物之大或许在于其重要性与时效性</b>          </div><p style="text-indent:2em">所感起于长期跑步给我带来的一些"损伤", 我所采取的应对措施.<p><p style="text-indent:2em">由于(可能)不良跑步姿势, 我脚外侧靠近小脚趾的位置通常会隔三差五地磨起水泡, 旧泡未好, 新泡又至, 导致"泡中泡", 两支脚都深受其害. 早些时候, 我不予理会, 而是让脚适应每天的跑步强度. 此做法导致的一个后果是: 如果我有一阵子没脚步, 再重新开始的时候, 脚将会重新被磨一遍, 直到其完全适应"新"的强度为止. </p><p style="text-indent:2em">前不久, 我参加学院的一个六周运动打卡活动, 强度相较之前有所上升, 所以本来处于"平衡态"的脚又被磨一遍. 但这次我基本每天都跑, 所以大都数时候都是带伤跑, 恢复程度赶不上每天的损伤程度, 甚至有点影响每天的跑步体验以及晚上的休息 (伤口处有灼烧感). 此时, 我想到农村的一个偏方: 往伤口处涂抹牙膏. 效果确实有那么一点, 但改善程度不大. 持续了几天, 我担心再这样下去会影响我每天的跑步常规. 于是, 我去昌平校医院咨询了医生. 医生的建议是多注意休息, 暂时不要跑步了, 我当然不同意了. 最后, 医生说可以买个创可贴贴在伤口处会有帮助. 我当时是不相信的, 因为在我的认知里, 创可贴是治割伤的, 从未听说过可以治磨脚引起的伤口. 本着死马当活马医的态度, 我去超市买了两个创可贴, 一共1元. 贴上之后, 效果远超我的想像, 当天跑步的体验感大大提升, 真就是一个"策马奔腾"...</p><p style="text-indent:2em">我由衷感到: 这5毛钱花得太值了! 恨不得再多贴几个, 哈哈哈哈. 事实是, 贴了这两个之后, 加上左脚趾的自愈能力, 左脚的磨伤已经基本好了. 但这时候右脚前期为减轻左脚的损伤, 加大了自身的磨损, 开始出现水泡. 啥也不用说了, 咱再穷也不差这几毛钱. 于是, 我又去超市买了两个创可贴, 将磨伤扼杀在萌芽当中. 考虑到长期性, 咱虽然不差这几毛钱, 但几毛钱也是钱, 于是我网购了40个创可贴(8.39元)做备用. 没错, 我嫌超市的5毛一个太贵了...</p><p style="text-indent:2em">5毛钱, 一个创可贴, 看似微不足道, 实则解决了长期困扰我的跑步磨伤问题, 其重要程度可以说无法衡量. 我是个完美主义, 喜欢在一件事上反复打磨, 将其做到极致. 就跑步磨伤这个问题, 根本解决方案是纠正跑姿, 但长期形成的习惯, 非常难改变. 但通过"创可贴"事件, 我想到可以从小处着手, <b>"未雨绸缪"或者"四两拔千斤".</b> 结合最近看的一本书<<跑步圣经>>, 里面提到跑姿不良引起磨伤的问题. 我想到可以买针对性的跑鞋或者鞋垫, 我最后买的是两双足内翻纠正鞋垫(24.8元), 效果也是出奇的好, 再一次感到物超所值. 然后, 就一发不可收拾, 我发现自己变得比以前娇情了: 我周末一般都进行长跑或者有时候运动有点过量, 第二天通常浑身酸痛, 以往都是不管, 但现在开始主动贴"狗皮膏药", 甚至恨不得把整个小腿贴满, 没办法, 那几毛钱真是太值了, 哈哈哈哈哈哈...</p>]]></content>
    
    
    <categories>
      
      <category>Life</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Grocery</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>自愈, 清醒, 自律</title>
    <link href="/2024/05/10/%E8%87%AA%E6%84%88-%E6%B8%85%E9%86%92-%E8%87%AA%E5%BE%8B/"/>
    <url>/2024/05/10/%E8%87%AA%E6%84%88-%E6%B8%85%E9%86%92-%E8%87%AA%E5%BE%8B/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note note-success">            <p><strong>希望能早日意识到: 自己真的很好, 因为我永远乐观勇敢. 遇到事会消沉难过, 但我真的很会治愈自己.</strong></p>          </div>        <div id="aplayer-rWvkNCkB" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;"></div>  <script>  var options = {"narrow":false,"autoplay":false,"showlrc":3,"theme":"#3f89c8","music":[{"title":"Trouble I'm","author":"Twinbed","url":"/music_player/play_list/Trouble-I-Am-In/Trouble-I-Am-In.mp3","pic":"/music_player/play_list/Trouble-I-Am-In/Trouble-I-Am-In.jpg","lrc":"/music_player/play_list/Trouble-I-Am-In/Trouble-I-Am-In.lrc"}]};  options.element = document.getElementById("aplayer-rWvkNCkB");  var ap = new APlayer(options);    window.aplayers || (window.aplayers = []);  window.aplayers.push(ap);  </script><div class="note note-light">            <p style="text-indent:2em">人只活一次, 你怎么舍得让自己短暂的一生是丑陋的, 你怎么舍得让自己短暂的一生只是在往下坠落. 即便是坠落, 也应该具有落日般的华丽吧. 这个世界上只有两种力量, 一种向上的力量, 向光; 一种向下的力量, 叫重力. 如果我们想让自己永葆美丽, 永葆内心的一种健康, 一种清澈, 一种清新, 一种和谐, 我们就要不断地在自己有生之年永不停歇地往上成长, 不断地成长. 唯有 grow up, 才能够抵御住 grow old 的向下的力量. 有一天我们的机体都会坏掉, 都会不怎么听话. 没关系, 让你的精神向着光, 不断地成长, 不断地越来越真, 越来越善, 越来越美丽. 你会慢慢地活成一束光, 谁若接近你就是接近光. 这是人生在世对自己的一种责任和使命啊. </p><p align="right">by 复旦大学 陈果教授</p>          </div>]]></content>
    
    
    <categories>
      
      <category>Life</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Grocery</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Markdown 语法</title>
    <link href="/2024/05/09/Markdown-%E8%AF%AD%E6%B3%95/"/>
    <url>/2024/05/09/Markdown-%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="锚点"><a href="#锚点" class="headerlink" title="锚点"></a>锚点</h1><ul><li>页内标题的引用: <code>[链接文本](#要引用的标题名)</code></li></ul>]]></content>
    
    
    <categories>
      
      <category>Coding</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WebDesign</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vim 使用技巧</title>
    <link href="/2024/05/09/Vim-%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <url>/2024/05/09/Vim-%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h1><h2 id="vim-surround"><a href="#vim-surround" class="headerlink" title="vim-surround"></a>vim-surround</h2><p>A plugin for deleting, changing, and adding “surroundings”</p><ul><li><a href="https://github.com/tpope/vim-surround/tree/master">GitHub 链接</a>, <a href="https://vimawesome.com/plugin/surround-vim">VimAwesome 链接</a></li><li>普通模式下命令: <code>[motions]s/S[text_objects][surroundings]</code><ul><li><strong>当命令用 S 时: 表示将 surroundings 单独放在一行</strong></li><li>motions: y (增加), c (改变), d (删除)</li><li>text_objects: [i&#x2F;a]w, s (current line), t (tag, 可带参数), f (function), surroundings</li><li>surroundings: ) (b), } (B), &gt; (r), ‘, “, <strong>HTML tag</strong> (当使用 (, { 时, 会添加空格环绕)</li></ul></li><li>可视模式 (按下 <code>v/V</code>) 下命令: <code>S[surroundings]</code></li><li>当安装 <a href="#vim-repeat">repeat.vim</a> 后可使用 <code>.</code> 重复执行上一个 surrounding 操作</li><li><a href="https://github.com/tpope/vim-surround/blob/master/doc/surround.txt">详细帮助文档</a></li></ul><h2 id="vim-repeat"><a href="#vim-repeat" class="headerlink" title="vim-repeat"></a>vim-repeat</h2><p>Repeat.vim rempas <code>.</code> in a way that plugins can tag into it <sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="[vim-repeat](https://github.com/tpope/vim-repeat)">[1]</span></a></sup></p><h1 id="替换"><a href="#替换" class="headerlink" title="替换"></a>替换</h1><h2 id="常用表达式"><a href="#常用表达式" class="headerlink" title="常用表达式"></a>常用表达式</h2><ul><li>每一行行首添加两个空格: <code>:%s/^/  /</code></li><li>每一<strong>非空</strong>行行首添加两个空格: <code>:%s/^\(.\)/  \1/</code> 或者 <code>:%s/\S/  &amp;/</code> (<code>&amp;</code> 表示引用查找到的字符串)</li><li>查找到的数字都加 1: <code>:%s/\d\+/\=submatch(0)+1/g</code></li></ul><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><h3 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h3><ul><li><code>.</code>: 任意单个字符</li><li><code>*</code>: 匹配前一个字符零次或多次。</li><li><code>\+</code>: 匹配前一个字符一次或多次。</li><li><code>\?</code>: 匹配前一个字符零次或一次。</li><li><code>^</code>: 匹配行首</li><li><code>$</code>: 匹配行尾</li><li><code>\( \)</code>: 捕获子组</li><li><code>\1</code>: 引用子组</li><li><code>\|</code>: 逻辑 “或” 操作</li></ul><h3 id="字符类"><a href="#字符类" class="headerlink" title="字符类"></a>字符类</h3><ul><li><code>\S</code>: 任意非空白字符</li><li><code>\s</code>: 任意空白字符</li><li><code>\d</code>: 任意数字</li></ul><h1 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h1><p>对于临时配置, 直接在命令模式下输入命令. 对于永久配置, 需要将命令写入 <code>_vimrc</code> 配置文件当中.</p><h2 id="命令备注"><a href="#命令备注" class="headerlink" title="命令备注"></a>命令备注</h2><ul><li><code>set</code>: 全局设置, 影响所有缓冲区和窗口</li><li><code>setlocal</code>: 本地设置, 公影响当前缓冲区和窗口</li></ul><h2 id="拼写检查"><a href="#拼写检查" class="headerlink" title="拼写检查"></a>拼写检查</h2><p>启用检查: </p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-comment">&quot; 开启检查</span><br><span class="hljs-keyword">set</span> spell<br><span class="hljs-comment">&quot; 关闭检查</span><br><span class="hljs-comment">&quot; set nospell</span><br><span class="hljs-comment">&quot; 检查语言设置, cjk 表示中日韩语言, 添加后可不对中文报错</span><br><span class="hljs-keyword">set</span> spelllang=en_us,cjk<br></code></pre></td></tr></table></figure><p>常用命令:</p><ul><li><code>]s</code>: 光标移动到下一个拼写错误处</li><li><code>[s</code>: 光标移动到上一个拼写错误处</li><li><code>zg</code>: 将单词加入词典</li><li><code>zw</code>: 将单词从词典中移除</li><li><code>zug/w</code>: 撤销 <code>g/w</code> 的操作</li><li><code>z=</code>: 拼写建议</li></ul><p>扩展: 通过设置 <code>spellfile</code> 变量加载自定义字典. 若有多个字典, 常用命令前以数字开头表示对相应的字典操作. <sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="[XU3352. Vim 实用技巧进阶_拼写检查)](https://xu3352.github.io/linux/2019/01/15/practical-vim-skills-chapter-20)">[2]</span></a></sup></p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://github.com/tpope/vim-repeat">vim-repeat</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://xu3352.github.io/linux/2019/01/15/practical-vim-skills-chapter-20">XU3352. Vim 实用技巧进阶_拼写检查)</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Software</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vim</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu 系统管理</title>
    <link href="/2024/05/06/Ubuntu-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86/"/>
    <url>/2024/05/06/Ubuntu-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h1><ul><li>查看系统版本: <code>lsb_release</code> (Linux Standard Base release)</li><li>定期执行命令, 实时显示结果: <code>wath [opts] commands</code> <sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="[Dontla. linux watch命令（定期执行命令，实时显示输出结果）.CSDN](https://blog.csdn.net/Dontla/article/details/133911043)">[1]</span></a></sup><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># opts: -n time (每 time 刷新一次); -d (突出变化); -t (关闭命令顶部的标题)</span><br><span class="hljs-comment"># 实时查看显存占用情况</span><br>wathch -n 5 -d nvidia-smi<br></code></pre></td></tr></table></figure></li></ul><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>若没有特别说明, 表示在 <code>~/.bashrc</code> (bash) 或者 <code>~/.zshrc</code> (zsh) 写入</p><h2 id="历史命令保存"><a href="#历史命令保存" class="headerlink" title="历史命令保存"></a>历史命令保存</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 取消保存历史命令的执行时间</span><br><span class="hljs-built_in">export</span> HISTTIMEFORMAT=<span class="hljs-string">&quot;&quot;</span><br><span class="hljs-comment"># 自定义历史命令路径</span><br><span class="hljs-built_in">export</span> HISTFILE=/path/to/custom_history<br></code></pre></td></tr></table></figure><h2 id="同一个帐号加载不同配置文件"><a href="#同一个帐号加载不同配置文件" class="headerlink" title="同一个帐号加载不同配置文件"></a>同一个帐号加载不同配置文件</h2><p>场景: 多人使用同一个帐户, 允许单独使用每个人自己定义的配置文件 <sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="[王bourne. 多人共用一个Linux用户, 实现Bash配置文件独立. 博客园](https://www.cnblogs.com/wbourne/p/16485712.html)">[2]</span></a></sup></p><p>解决方案: 使用 <code>ssh</code> 登陆时, 执行与配置文件相关的命令 <code>bash --rcfile /path/to/custom_.bashrc</code></p><p>命令: <code>ssh -t user@host bash --rcfile /path/to/custom_.bashrc</code> (<code>-t</code> 表示分配一个终端, 不可缺少)</p><p>扩展: 可把上述命令定义成一个别名 (alias), 简化输入</p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://blog.csdn.net/Dontla/article/details/133911043">Dontla. linux watch命令（定期执行命令，实时显示输出结果）.CSDN</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://www.cnblogs.com/wbourne/p/16485712.html">王bourne. 多人共用一个Linux用户, 实现Bash配置文件独立. 博客园</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Ubuntu</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Writing...</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>手机常用软件与个性化配置</title>
    <link href="/2024/05/05/%E6%89%8B%E6%9C%BA%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E4%B8%8E%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE/"/>
    <url>/2024/05/05/%E6%89%8B%E6%9C%BA%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E4%B8%8E%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="必备软件"><a href="#必备软件" class="headerlink" title="必备软件"></a>必备软件</h1><ol><li>微信阅读</li><li>宜准跑步</li><li>微信</li><li>哔哩哔哩</li><li>中国银行</li><li>酷狗音乐</li><li>支付宝</li><li>淘宝</li><li>高德地图</li><li>一键锁屏</li><li>铁路12306</li></ol><h1 id="可选软件"><a href="#可选软件" class="headerlink" title="可选软件"></a>可选软件</h1><ul><li>企业微信</li><li>小红书</li></ul><h1 id="个性化配置"><a href="#个性化配置" class="headerlink" title="个性化配置"></a>个性化配置</h1><h2 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h2><ul><li>深色模式</li><li>桌面图标整理</li></ul><h2 id="系统设置"><a href="#系统设置" class="headerlink" title="系统设置"></a>系统设置</h2><ul><li>定时开关机</li><li>通知提醒</li><li>振动模式</li></ul><h2 id="通讯配置"><a href="#通讯配置" class="headerlink" title="通讯配置"></a>通讯配置</h2><ul><li>短信&#x2F;电话拦截</li></ul><h2 id="百度输入法华为版"><a href="#百度输入法华为版" class="headerlink" title="百度输入法华为版"></a>百度输入法华为版</h2><ul><li>界面基本设置 (26 键五笔)</li><li><strong>修改短语同步</strong></li><li><strong>dvp 皮肤</strong></li></ul>]]></content>
    
    
    <categories>
      
      <category>Life</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>不会 Debug 的程序员不是好的程序员</title>
    <link href="/2024/05/05/%E4%B8%8D%E4%BC%9A-Debug-%E7%9A%84%E7%A8%8B%E5%BA%8F%E5%91%98%E4%B8%8D%E6%98%AF%E5%A5%BD%E7%9A%84%E7%A8%8B%E5%BA%8F%E5%91%98/"/>
    <url>/2024/05/05/%E4%B8%8D%E4%BC%9A-Debug-%E7%9A%84%E7%A8%8B%E5%BA%8F%E5%91%98%E4%B8%8D%E6%98%AF%E5%A5%BD%E7%9A%84%E7%A8%8B%E5%BA%8F%E5%91%98/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note note-success">            <p>记 2024 年五一假期间不出校游玩, 也没科研, 而是基本每天写 HTML “日历贡献图”</p>          </div><p style="text-indent:2em">一切起源于: 正向反馈对坚持非常重要. 4 月到 5 月期间, 学院举办了一个关于 6 周运动打卡的活动. 而我在这学期开学后已经基本养成了每天跑步 35 分钟的习惯, 所以该活动对我来说不费吹灰之力, 纯送奖品. 活动参与过程中与预想中的基本一样, 非常简单, 但其中的一个打卡环节从小来说让我最近两个月跑步更有动力, 从大来说促成了我五一假的安排及该日志的诞生.</p><p style="text-indent:2em">由于我每天都是在健身房跑步机上跑步, 并用运动手表记录, 这涉及到和手机数据的一个同步. 同时, 我跑步的时候基本不带手机, 所以我的打卡做法是每隔一周同步一次数据, 然后打卡. 在这其中我发现, <b>当看着自己一周跑步 6 天, 跑步时间, 速度, 距离基本一致, 我感到非常有成就感, 非常开心, 尤其是在周五或者周六的时候会进行长跑, 其中的公里数让我颇为自豪.</b> 打卡这一简单方式, 给我带来的这种感觉或是状态使我更加容易坚持每天按时运动, 同时学会合理调整自己的状态, 即不管当天的状态如何, 我都尽量维持自己的跑步时间, 速度和距离. 最近两个月, 我跑步的时候大都数情况下是非常开心的!</p><p style="text-indent:2em">另外一件与打卡类似的事, 我自己手写了一个月日历表, 统计每天冥想, 跑步和阅读的完成情况, 等到过一阵子 (尤其月末) 再看时, 一种和跑步打卡类似的感觉油然而生, 促使了我每天坚持冥想和阅读 (连续阅读天数达到了 50 天).</p><p style="text-indent:2em">以上两件事都可以看作记录每天的成长点滴, 定期查看, 其中的 (正) 反馈将极大促进后续的坚持.</p><p style="text-indent:2em">记录成长过程的点滴, 我觉得图表是最直观的, 于是我想到用类似 GitHub 个人首页的贡献图来记录自己每天的冥想, 阅读, 跑步等习惯. 想到就做, 通过查找资料知道可以通过 <a href="https://echarts.apache.org/zh/option.html#title">Echarts</a> 绘制, 我最开始的做法是引入 <a href="https://hexo.io/zh-cn/docs/writing">Hexo</a> 现成的 Echarts 插件, 但是可供参考的资料基本没有用插件绘制日历贡献图的, 都是一些比较简单的作图. 对于我的绘图, 一个很重要的功能是其要能随着时间或者数据的变化自动更新, 这涉及到用相关函数或者功能导入作图数据.</p> <p style="text-indent:2em">我记得五一的前几天, 我都是想着利用现有的 Hexo Echarts 插件, 然后结合网上绘制日历贡献图的教程, 但往往无法渲染出图. 由于文档本身是 <b>.md</b>, 但要想能正确地绘图, 通常都需要引入 JavaScript 代码. 不幸的是, 我对此基本没了解过. 所以对于不能出图, 我只能一遍遍检查文档, 使其尽可能和网上的参考一致. 但最后也未能如愿, 因为就算我能保证代码一致, 原理上我是利用插件, 和网上的参考直接利用 Echarts 始终有所不同, 当无法出图时, 我都不知道是哪里出问题了... 我清楚地记得, 5 月 4 号那个晚上都有点 emo 了, 甚至在淘宝上搜索关于 "HTML 网页设计" 等关键字的店铺. 我太想实现这个功能了, 当在自己有限的时间和精力范围内, 自己无法实现时, 便想依靠外力, 毕竟专人做专事. </p><p style="text-indent:2em">第二天的早上, 也就是 5 月 5 号, 假期的最后一天, 尽管前一天晚上已经决定依托外力解决问题, 但还是很不甘心, 打算自己再尝试下. 冷静下来后, 想到有没有什么办法知道为啥不出图, 就类似程序的 <b>debug</b>, 只是这时候是 HTML 或者 JavaScript 语言. 不查不知道, 一查才知道, 对于 Edge 来说, 一个 <a href="/2024/05/05/Microsoft-Edge-使用/"><b>F12</b></a> 就解决问题了, 能调出网页背后的源代码, 并可以看到出错的地方, 简直不要太清晰! 由此我得出这个假期的深刻体会之一, 也就是文章标题: <b>不会调试的程序员不是好的程序号.</b> 同样的, 在解决任何问题时, 若结果不如意, 我觉得知道哪个环节做得不好或者出问题了, 对后续成长是至关重要的. </p><p style="text-indent:2em">我在假期最后一天能得偿所愿的另一个深刻体会: <b>任何问题总有方法解决, 当找到对应的方法或者钥匙时, 问题自然迎刃而解.</b> 在知道网页调试之后, 我最终放弃了使用 Hexo Echarts 现有插件的使用, 而是完全通过 JavaScripts 脚本实现, 与网上的参考对齐, 然后 <a href="/running/"><b>I Make It!</b></a></p><div class="note note-secondary">            <p>文章开始写的日期是 5 月 5 号下午, 当天晚上也写了一部分 (我知道如果当天不写, 后面就都忘记了…), 本想着尽快写完的, 结果直到今天 (5 月 9 号) 才把后面较为关键的体会给补齐, 感觉最开始的好多体会都没有了. 严格意义上说, 这是我博客中的第一篇生活日志, 开了个头, 尽管不是很好, 但希望并相信自己用文字记录生活的能力将不断提升!</p><p align="right">2024-05-09 写于昌平实验室</p>          </div>]]></content>
    
    
    <categories>
      
      <category>Life</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Grocery</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Microsoft Edge 使用</title>
    <link href="/2024/05/05/Microsoft-Edge-%E4%BD%BF%E7%94%A8/"/>
    <url>/2024/05/05/Microsoft-Edge-%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="F12-调试-HTML-代码"><a href="#F12-调试-HTML-代码" class="headerlink" title="F12 调试 HTML 代码"></a>F12 调试 HTML 代码</h1><ul><li><a href="https://blog.csdn.net/qq_42159062/article/details/105991720">开发工具使用</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>Windows</category>
      
      <category>Software</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Python 基础</title>
    <link href="/2024/05/05/Python-%E5%9F%BA%E7%A1%80/"/>
    <url>/2024/05/05/Python-%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="常用参考文档"><a href="#常用参考文档" class="headerlink" title="常用参考文档"></a>常用参考文档</h1><ul><li><a href="https://www.runoob.com/python/python-tutorial.html">Python 菜鸟教程</a></li><li><a href="https://docs.python.org/zh-cn/3.12/tutorial/index.html">Python 教程</a></li></ul><h1 id="变量命名"><a href="#变量命名" class="headerlink" title="变量命名"></a>变量命名</h1><ul><li>保持一致性</li><li>使用常见缩写</li><li>避免过渡缩写</li><li>使用首字母缩写</li><li>保留单词词干</li><li>蛇形命名法</li></ul><h1 id="Debug"><a href="#Debug" class="headerlink" title="Debug"></a>Debug</h1><h2 id="日志文件记录"><a href="#日志文件记录" class="headerlink" title="日志文件记录"></a>日志文件记录</h2><ul><li>将程序的运行 (标准与错误) 输出显示到终端并保存到文件<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># $(command) 表示将 command 的输出插入到当前命令中 (命令替换, 相当于 &quot;复合变量&quot; 值的引用)</span><br><span class="hljs-comment"># date +Format 是 date 命令的格式化输出, 用 _ 分隔日期和时间部分</span><br>python exp_runner.py 2&gt;&amp;1 | <span class="hljs-built_in">tee</span> <span class="hljs-string">&quot;log_<span class="hljs-subst">$(date +&#x27;%Y%m%d_%H%M%S&#x27;)</span>.txt&quot;</span><br><br></code></pre></td></tr></table></figure></li></ul><h2 id="控制台命令"><a href="#控制台命令" class="headerlink" title="控制台命令"></a>控制台命令</h2><ul><li>查看 numpy 数组不为 0 的元素<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 返回非零元素的行索引与列索引</span><br>nonzero_indices = np.nonzero(array) <span class="hljs-comment"># 或者 np.where(array != 0) </span><br><span class="hljs-comment"># 获取不为零的元素</span><br>nonzero_elements= array(nonzero_indices)<br></code></pre></td></tr></table></figure></li><li>查看 Tensor 唯一值: <code>torch.unique(tensor)</code></li><li>排序 Tensor: <code>torch.sort(tensor)</code>, 返回排序后的张量及其对应的索引</li><li>检查 Tensor 的布尔值: <code>Tensor.all()/.any()</code></li></ul><h2 id="程序语句"><a href="#程序语句" class="headerlink" title="程序语句"></a>程序语句</h2><ul><li><code>try-except</code>: 捕获和处理异常</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">try</span>:<br>    <span class="hljs-comment"># 可能引发异常的代码块</span><br>    <span class="hljs-comment"># 可能会抛出异常的语句</span><br><span class="hljs-keyword">except</span> Exception1 <span class="hljs-keyword">as</span> e1:<br>    <span class="hljs-comment"># 处理 Exception1 类型的异常</span><br>    <span class="hljs-comment"># 可以访问异常对象 e1 的信息</span><br><span class="hljs-keyword">except</span> Exception2 <span class="hljs-keyword">as</span> e2:<br>    <span class="hljs-comment"># 处理 Exception2 类型的异常</span><br>    <span class="hljs-comment"># 可以访问异常对象 e2 的信息</span><br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-comment"># 可选的 else 块，在没有异常时执行</span><br><span class="hljs-keyword">finally</span>:<br>    <span class="hljs-comment"># 可选的 finally 块，无论是否发生异常都会执行</span><br></code></pre></td></tr></table></figure><h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><h2 id="模块与包"><a href="#模块与包" class="headerlink" title="模块与包"></a>模块与包</h2><h3 id="包的导入"><a href="#包的导入" class="headerlink" title="包的导入"></a>包的导入</h3><ul><li>相对导入: 同目录或者子目录直接导入, 跨目录使用前导点 <code>..</code></li><li><code>sys.path.append(extra_path)</code></li><li>设定环境变量 <code>PAYTHONPATH=$PAYTHONPATH:extra_path</code></li></ul><h2 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h2><ul><li>输出多个重复字符: <code>print(N*&#39;str&#39;)</code></li><li>手动停止程序运行: <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> sys<br>sys.exit(<span class="hljs-string">&quot;stop_message&quot;</span>)<br></code></pre></td></tr></table></figure></li><li>字符串 <code>format</code> 方法 and 格式化字符串 (f-string)<ul><li>保留 pi 小数点后两位: <code>&quot;&#123;:.2f&#125;&quot;.format(pi)</code> 或 <code>f&#39;&#123;pi:.2f&#125;&#39;</code></li><li>动态保留小数点后位数: <code>&quot;&#123;:.&#123;&#125;f&#125;&quot;.format(pi, precision)</code> <code>f&#39;&#123;pi:.&#123;precision&#125;f&#125;&#39;</code></li></ul></li></ul><h1 id="内置类型"><a href="#内置类型" class="headerlink" title="内置类型"></a>内置类型</h1><h2 id="映射类型-–-dict"><a href="#映射类型-–-dict" class="headerlink" title="映射类型 – dict"></a>映射类型 – dict</h2><ul><li><code>class dict(**kwargs), dict(mapping, **kwargs), dict(iterable, **kwargs)</code>: 返回一个字典, 基于可选的位置参数和可能为空的关键字参数集来初始化</li><li><code>len(d)</code>: 返回字典 <em>d</em> 中的项数</li><li><code>list(d)</code>: 返回字典 <em>d</em> 中使用的所有键的列表, 相当于 <code>list(d.keys())</code></li><li><code>iter(d)</code>: 返回字典 <em>d</em> 中的键为元素的迭代器, 相当于 <code>iter(d.keys())</code></li><li><code>d.keys()</code>: 返回字典键组成的一个新视图</li><li><code>d.values()</code>: 返回字典值组成的一个新视图</li><li><code>d.items()</code>: 返回字典项 <code>(键, 值)</code> 组成的元组视图</li></ul><div class="note note-warning">            <p><strong>字典视图对象</strong></p><p>由 <code>dict.keys(), dict.values() 和 dict.items()</code> 所返回的对象是 <em>视图对象</em>, 提供字典条目的一个动态视图, 当字典改变时, 视图也会改变. 字典视图可被迭代以产生对应的数据, 并支持成员检测</p>          </div><h1 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h1><ul><li><code>isinstance(object, classinfo)</code><ul><li>如果参数 <em>object</em> 是参数 <em>classinfo</em> 的实例或者其子类, 则返回 <code>True</code>, 否则返回 <code>False</code></li><li>如果参数 <em>classinfo</em> 是类型对象元组, 那么 <em>object</em> 是其中任何一个类型的实例就返回 <code>True</code></li></ul></li><li><code>str(object=&#39;&#39;)</code>: 返回 <em>object</em> 的字符串版本, 如果未提供 <em>object</em> 则返回空字符串</li><li><code>var([object])</code>: 返回模块, 类, 实例或其它具有 <code>__dict__</code> 属性的对象的 <code>__dict__</code></li><li><code>sorted(iterable, key=None, reverse=False)</code>: 根据 <em>iterable</em> 中的项返回一个新的已排序<em><strong>列表</strong></em><ul><li>对字典执行 <code>list(d)</code>, 返回字典中所有键的<em>列表</em>, 按插入次序排列; 而操作 <code>sorted(d)</code> 返回字典中所有键的升序排列<em>列表</em></li></ul></li><li><code>getattr(object, name[, default])</code>: 返回对象命名属性的值, 相当于 <code>object.name</code>, 其中 <em>name</em> 必须为字符串; 如果字符串是对象的属性之一, 则返回属性值, 若属性不存在, 则返回 <code>default</code> 值</li><li><code>zip([iterable, ...])</code>: 创建一个聚合了来自每个可迭代对象中元素的<strong>元组</strong>迭代器, 其中第 <em>i</em> 个元组包含来自每个参数序列或可迭代序列对象的第 <em>i</em> 个元素</li><li><code>all(iterable)</code>: 如果 <em>iterable</em> 的所有元素均为真值 (或为空), 则返回 <em>True</em>, 否则返回 <em>False</em></li><li><code>any(iterable)</code>: 如果 <em>iterable</em> 的任一元素为真值, 则返回 <em>True</em>, 如果所有元素为假值或 <em>iterable</em> 为空, 则返回 <em>False</em></li><li><code>map(function, iterable, ...)</code>: 返回一个将 <em>function</em> 应用于 <em>iterable</em> 中每一项并输出其结果的<strong>迭代器</strong></li><li><code>tuple([iterable])</code>: 构造一个元组, 其中的项与 <em>iterable</em> 中的项具有相同的值与顺序<ul><li><em>iterable</em> : 序列, 支持迭代的容器或其他<em>可迭代对象</em></li></ul></li><li><code>super(Class, self)</code>: 返回一个代理对象, 将方法调用委托给 <em>Class</em> 的父类, 其中 <em>self</em> 可理解为 Class 的一个实例对象</li></ul><h1 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h1><ul><li>    <div class="fold">      <div class="fold-title fold-successe collapsed" data-toggle="collapse" href="#collapse-05eef982" role="button" aria-expanded="false" aria-controls="collapse-05eef982">        <div class="fold-arrow">▶</div>将两个列表转化为字典      </div>      <div class="fold-collapse collapse" id="collapse-05eef982">        <div class="fold-content">          <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">key_list = [k1, k2, ...]<br>value_list = [v1, v2, ...]<br>dict_from_list_by_dict = <span class="hljs-built_in">dict</span>(<span class="hljs-built_in">zip</span>(key_list, value_list))<br>dict_from_list_by_for = &#123;k: v <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(key_list, value_list)&#125;<br>dict_from_list_by_range = &#123;key_list[i]: value_list[i] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(key_list))&#125;<br><span class="hljs-comment"># &#123;k1: v1, k2: V2, ...&#125;</span><br></code></pre></td></tr></table></figure>        </div>      </div>    </div></li></ul>]]></content>
    
    
    <categories>
      
      <category>Coding</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python 库学习</title>
    <link href="/2024/05/05/Python-%E5%BA%93%E5%AD%A6%E4%B9%A0/"/>
    <url>/2024/05/05/Python-%E5%BA%93%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Pandas"><a href="#Pandas" class="headerlink" title="Pandas"></a>Pandas</h1><ul><li><a href="https://pythonjishu.com/pandas-dataframe-to_excel/">Pandas 将数据写入 Excel</a></li><li>获取 <em>DataFrame</em> 的所有列名: <code>list(data_frame)</code> (sorted 返回有序)</li></ul><h1 id="datetime"><a href="#datetime" class="headerlink" title="datetime"></a>datetime</h1><ul><li><a href="https://blog.csdn.net/beautiful77moon/article/details/88877519#:~:text=%E5%9C%A8python%E4%B8%AD%EF%BC%8C%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%20datetime%20%E6%9D%A5%E5%A4%84%E7%90%86%E6%97%B6%E9%97%B4%E5%92%8C%E6%97%A5%E6%9C%9F%EF%BC%8C%E4%BD%BF%E7%94%A8%E6%98%AF%E8%A6%81%E7%8E%B0%E5%AF%BC%E5%85%A5datetime%E5%BA%93%201%20%3E%3E%3E%20%20print%20(datetime.datetime.today()),(datetime.datetime.now())%204%202019%20-03-%2028%2020%3A%2034%3A%2011.377443">获取当前日期&#x2F;时间</a></li><li><a href="https://blog.csdn.net/Gabriel100yi/article/details/135251097#:~:text=%E8%A6%81%E8%AE%A1%E7%AE%97%E5%BD%93%E5%89%8D%E6%97%A5%E6%9C%9F%E6%98%AF%E4%B8%80%E5%B9%B4%E4%B8%AD%E7%9A%84%E7%AC%AC%E5%87%A0%E5%A4%A9%EF%BC%8C%E6%88%91%E4%BB%AC%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%20date%20%E7%B1%BB%E7%9A%84%E5%B1%9E%E6%80%A7%E5%92%8C%E6%96%B9%E6%B3%95%E3%80%82%20%E5%85%B7%E4%BD%93%E6%AD%A5%E9%AA%A4%E5%A6%82%E4%B8%8B%EF%BC%9A%20%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E6%97%A5%E6%9C%9F%E7%9A%84%E5%B9%B4%E4%BB%BD%EF%BC%9A%E4%BD%BF%E7%94%A8%20year%20%E5%B1%9E%E6%80%A7%E3%80%82%20%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E6%97%A5%E6%9C%9F%E7%9A%84%E6%9C%88%E4%BB%BD%EF%BC%9A%E4%BD%BF%E7%94%A8,%E4%BD%BF%E7%94%A8%20date%20%E7%B1%BB%E7%9A%84%20timetuple()%20%E6%96%B9%E6%B3%95%E5%B0%86%E6%97%A5%E6%9C%9F%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%97%B6%E9%97%B4%E5%85%83%E7%BB%84%E3%80%82%20%E4%BD%BF%E7%94%A8%E6%97%B6%E9%97%B4%E5%85%83%E7%BB%84%E4%B8%AD%E7%9A%84%20tm_yday%20%E5%B1%9E%E6%80%A7%E8%8E%B7%E5%8F%96%E4%B8%80%E5%B9%B4%E4%B8%AD%E7%9A%84%E7%AC%AC%E5%87%A0%E5%A4%A9%E3%80%82">计算指定日期是一年中的第几天</a></li><li><a href="https://blog.csdn.net/weixin_40012554/article/details/108759160">计算日期差</a></li></ul><h1 id="os"><a href="#os" class="headerlink" title="os"></a>os</h1><h2 id="os-path-–-路径操作"><a href="#os-path-–-路径操作" class="headerlink" title="os.path – 路径操作"></a>os.path – 路径操作</h2><ul><li><code>os.path.split(*path*)</code>: 将路径 <em>path</em> 拆分为一对, 即 <code>(head, tail)</code>, 其中 <em>tail</em> 是路径的最后一部分, 而 <em>head</em> 以除最后一部分外的所有内容, tail 部分不会包含斜杠, head 末尾的斜杠会被去掉<ul><li>如果 path 以斜杠结尾, 则 tail 为空</li><li><code>os.path.join(head, tail) == path</code></li><li><code>head == os.path.dirname(path)</code></li><li><code>tail == os.path.basename(path)</code></li></ul></li><li><code>os.path.dirname(path)</code>: 返回路径 path 的目录名称</li><li><code>os.path.basename(path)</code>: 返回路径 path 的基本名称</li><li><code>os.path.join(path, *paths)</code>: 智能地拼接一个或多个路径部分, 返回值是 <em>path</em> 和 <em>paths</em> 的所有成员的拼接, 其中每个非空部分后面都紧跟一个目录分隔符, 最后一个部分除外<ul><li>如果最后一个部分为空, 则结果将以分隔符结尾</li><li>如果某个部分为绝对路径, 则之前的所有部分会被 <strong>丢弃</strong>, 然后从绝对路径部分重新开始继续拼接</li></ul></li><li><code>os.path.splitex(path)</code>: 将路径名称拆分为 <code>(root, ext)</code> 对, 使得 <code>root + ext = path</code>, 并且扩展名为空或以句点打头并最多只包含一个句点</li><li><code>os.path.splitdrive(path)</code>: 将路径拆分为一对, 即 <code>(drive, tail)</code>, 使得 <code>drive + tial == path</code>, 其中 <em>drive</em> 是持载点或空字符串<ul><li>如果路径 path 包含盘符, 则 drive 将包含冒号之前的所有内容包括冒号本身</li></ul></li><li><code>os.path.exists(path)</code>: 如果 <em>path</em> 指向一个已存在的路径或已打开的文件描述符, 返回 <code>True</code></li></ul>]]></content>
    
    
    <categories>
      
      <category>Coding</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo Fluid 博客常用配置</title>
    <link href="/2024/04/29/Hexo-Fluid-%E5%8D%9A%E5%AE%A2%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/"/>
    <url>/2024/04/29/Hexo-Fluid-%E5%8D%9A%E5%AE%A2%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="live2d-看板娘"><a href="#live2d-看板娘" class="headerlink" title="live2d 看板娘"></a>live2d 看板娘</h1><h2 id="增加"><a href="#增加" class="headerlink" title="增加"></a>增加</h2><h2 id="模型更新"><a href="#模型更新" class="headerlink" title="模型更新"></a>模型更新</h2><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://andytonglove.github.io/2022/09/08/%E5%8D%9A%E5%AE%A2live2d%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE%2f">Andytonglove. 博客live2d看板娘配置——fluid主题</a><br>[2] <a href="https://yzs020220.github.io/posts/41158/">没有秃头基因的燊. Hexo博客添加live2d看板娘-可换装，增删模型</a></p><h1 id="自定义页添加目录"><a href="#自定义页添加目录" class="headerlink" title="自定义页添加目录"></a>自定义页添加目录</h1><p>对于自定义页的 <em>.md</em> 文件自动添加目录, 添加步骤:</p><ol><li>全局安装 <a href="https://github.com/jonschlinkert/markdown-toc?tab=readme-ov-file"><strong>mardown-toc</strong></a> 包: <code>npm install -g markdown-toc</code></li><li>在需要添加目录的文件的对应位置使用代码: <code>&lt;!-- toc --&gt;</code></li><li>在终端输入命令: <code>mardown-toc -i file_name.md</code></li></ol><h1 id="插入-Echarts-动态图表"><a href="#插入-Echarts-动态图表" class="headerlink" title="插入 Echarts 动态图表"></a>插入 Echarts 动态图表</h1><ul><li><a href="https://github.com/D-Sketon/hexo-tag-echarts-new">GitHub 链接</a></li><li><a href="https://pxxyyz.com/posts/15698/">秃头怪的自娱自乐. Fluid+ECharts</a></li><li><a href="https://glwhappen.github.io/post/js-echarts-csv/">Happen. js读取csv数据，并用Echarts展示</a></li><li><a href="https://echarts.apache.org/zh/option.html#title"><strong>ECHARTS 帮助文档</strong></a></li></ul><h1 id="增加网站运行时间"><a href="#增加网站运行时间" class="headerlink" title="增加网站运行时间"></a>增加网站运行时间</h1><ul><li><a href="https://hexo.fluid-dev.com/posts/fluid-footer-custom/">官方 Fluid</a></li><li><a href="https://blog.gumengyo.top/posts/aabbccdd/">Gumeng’s blog</a></li></ul><h1 id="插入音乐播放界面"><a href="#插入音乐播放界面" class="headerlink" title="插入音乐播放界面"></a>插入音乐播放界面</h1><ul><li><a href="https://github.com/MoePlayer/hexo-tag-aplayer">hexo-tag-aplayer</a></li><li><a href="https://gumengyo.github.io/posts/eeaa9988/">Gumeng. Fluid主题添加音乐功能</a></li><li><a href="https://blog.csdn.net/weixin_58068682/article/details/116612364">Chak Aciano. Hexo博客技巧：为博客插入音乐. CSDN</a></li></ul><h1 id="增加时间线-Tag-插件"><a href="#增加时间线-Tag-插件" class="headerlink" title="增加时间线 Tag 插件"></a>增加时间线 Tag 插件</h1><ul><li><a href="https://caczhtus.github.io/posts/51050/#%E6%B7%BB%E5%8A%A0-css-%E6%B8%B2%E6%9F%93%E6%96%87%E4%BB%B6">Caczhtus.【Hexo】添加 volantis 主题下的 link 及时间线标签</a></li><li><a href="https://volantis.js.org/v6/tag-plugins/#timeline">Volantis 标签插件</a></li></ul><h1 id="自定义图标"><a href="#自定义图标" class="headerlink" title="自定义图标"></a>自定义图标</h1><ul><li><a href="https://www.iconfont.cn/">iconfont</a></li><li><a href="https://fluid-dev.github.io/hexo-fluid-docs/icon/#%E5%86%85%E7%BD%AE%E7%A4%BE%E4%BA%A4%E5%9B%BE%E6%A0%87">Fluid 自定义植图标</a></li></ul><h1 id="配置-sitemap-并提交至-Bing-搜索引擎"><a href="#配置-sitemap-并提交至-Bing-搜索引擎" class="headerlink" title="配置 sitemap 并提交至 Bing 搜索引擎"></a>配置 sitemap 并提交至 Bing 搜索引擎</h1><p>Motivation: 加快搜索引擎索引网站内容</p><ul><li><a href="https://blog.csdn.net/yzixin/article/details/133549285">pokerface168. 网站地图sitemap提交至百度、谷歌、Bing搜索引擎的方法. CSDN</a></li><li><a href="https://zhaolong.me/2019/Web-2019-09-18-Hexo-%E9%85%8D%E7%BD%AE-Sitemap-%E4%BB%A5%E5%8F%8A%E8%AE%BE%E7%BD%AE-Keywords%2f">Zhao Long. Hexo 配置 Sitemap 以及设置 Keywords</a></li></ul><h1 id="零碎参考"><a href="#零碎参考" class="headerlink" title="零碎参考"></a>零碎参考</h1><ul><li><a href="https://prinsss.github.io/get-hexo-posts-by-category-or-tag/">Hexo 获取特定分类或标签下的文章</a></li><li><a href="https://alec-97.github.io/posts/3780537372/">Alec. 添加学习进度条</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>WebDesign</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PyTorch Notes</title>
    <link href="/2024/04/22/PyTorch-Notes/"/>
    <url>/2024/04/22/PyTorch-Notes/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="安装与验证"><a href="#安装与验证" class="headerlink" title="安装与验证"></a>安装与验证</h1><p>通过<a href="https://pytorch.org/get-started/previous-versions/">官网</a>指南安装, 如 CUDA 11.3 + PyTorch 1.12</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 视觉任务通常不需要安装 torchaudio 包</span><br>conda install pytorch==1.12.0 torchvision==0.13.0 cudatoolkit=11.3 -c pytorch<br></code></pre></td></tr></table></figure><p><strong>验证:</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 验证 torch 是否正常安装</span><br>ipython  <span class="hljs-comment"># pip install ipython, ipython 比 python 输入更方便</span><br><span class="hljs-keyword">import</span> torch<br><span class="hljs-built_in">print</span>(torch.rand(<span class="hljs-number">5</span>, <span class="hljs-number">3</span>))<br><br><span class="hljs-comment"># 验证是否支持 GPU 加速</span><br><span class="hljs-built_in">print</span>(torch.cuda.is_available())<br></code></pre></td></tr></table></figure><h1 id="运行配置"><a href="#运行配置" class="headerlink" title="运行配置"></a>运行配置</h1><ul><li><code>CUDA_VISIBLE_DEVICES</code>: 环境变量, 控制哪些 GPU 设备可用于 CUDA 程序 (可在程序运行时指定, 或者在程序中使用 <code>os.environ[&#39;CUDA_VISIBLE_DEVICES&#39;])</code> 定义)</li></ul><h1 id="The-Basics"><a href="#The-Basics" class="headerlink" title="The Basics"></a>The Basics</h1><h2 id="Tensors"><a href="#Tensors" class="headerlink" title="Tensors"></a>Tensors</h2><p><code>Tensors</code> 是一种特殊的数据结构, 与数组和矩阵非常相似, 在 PyTorch 中, <em>使用 Tensors 表示模型的输入和输出以及模型的参数</em></p><ul><li>Tensors 与 NumPy 中的 <code>ndarrays</code> 类似, 只是 Tensors 可以在 GPU 或其它硬件加速器上运行</li><li>Tensors 可以和 ndarray 共享相同的底层内存, 从而无需复制数据</li><li>Tensors 对自动微分进行了优化</li></ul><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><ul><li><em><strong>shape: 整数元组</strong></em>  –&gt; <code>Tensor.size()</code></li><li>dtype</li><li>device: 存储设备 (默认 cpu)</li><li>dimensions: <code>Tensor.dim()=len(Tensor.shape)</code></li><li>total numbel of elments: <code>Tensor.numel()=torch.numel(tensor)</code></li></ul><h3 id="常见初始化操作"><a href="#常见初始化操作" class="headerlink" title="常见初始化操作"></a>常见初始化操作</h3><ul><li>用 <code>tensor</code> 函数转化 python 序列<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">data = [[<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>], [<span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>]]<br>t_data = torch.tensor(data)<br></code></pre></td></tr></table></figure></li><li>用 <code>from_numpy</code> 函数转化 NumPy 数组<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">np_array = np.array(data)<br>t_np = torch.from_numpy(np_array)<br></code></pre></td></tr></table></figure></li><li>已知 <code>shape</code>, 利用特殊函数创建<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">shape = (<span class="hljs-number">2</span>, <span class="hljs-number">3</span>)<br>t_ones = torch.ones(shape)<br>t_zeros = torch.zeros(shape)<br>t_rand = torch.rand(shape, dtype=torch.<span class="hljs-built_in">float</span>)  <span class="hljs-comment"># 指定数据类型</span><br></code></pre></td></tr></table></figure></li><li>参考已知 Tensors, 利用 <code>*_like</code> 函数创建<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">t_ones = torch.ones_like(t_data)<br>t_zeros = torch.zeros_like(t_data)<br>t_rand = torch.rand_like(t_data, dtype=torch.<span class="hljs-built_in">float</span>)  <span class="hljs-comment"># 指定数据类型</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="Tensor-创建函数"><a href="#Tensor-创建函数" class="headerlink" title="Tensor 创建函数"></a>Tensor 创建函数</h3><ul><li>torch.empty(*size, dtype&#x3D;None): 创建未初始化的 Tensor</li><li>torch.zeros(*size, dtype&#x3D;None)</li><li>torch.zeros_like(input, dtype&#x3D;None)</li><li>torch.ones(*size, dtype&#x3D;None)</li><li>torch.randn(*size, dtype&#x3D;None): 随机数据满足标准正太分布</li><li>torch.rand(*size, dtype&#x3D;None): 随机数据满足 (0, 1) 上的均匀分布</li><li>torh.normal(means, std) 离散正态分布</li><li>torch.linspace(start, end, steps): create a one-dimensonal tensor of <code>steps</code> whose value evenly spaced from <code>start</code> to <code>end</code></li><li>torch.arange(start&#x3D;0, end, step&#x3D;1, dtype&#x3D;None, device&#x3D;None, requires_grad&#x3D;False): return a 1-D tensor of size <code>(end - start) // step</code> with values from the <code>[start, end)</code> taken with common difference <code>step</code> beginnig from <code>start</code></li><li>torch.tensor(data, dtype&#x3D;None, device&#x3D;None, requires_grad&#x3D;False): 用数据构造一个张量</li><li>torch.Tensor(data): 用数据构造一个张量</li></ul><p><strong>Note:</strong></p><div class="note note-warning">            <p>torch.tensor() 是一个函数, 使用时对输入进行拷贝 (不是直接引用), 并根据<em>原始数据</em>生成相应的 torch.LongTensor, torch.FloatTensor, torch.DoubleTensor<br>torch.Tensor() 是一个类 (默认张量类型 torch.FloatTensor() 的别名), 使用时会调用 Tensor 类的构造函数 <strong>init</strong>, 生成<em>单精度浮点类型的张量, 也可仅指定 shape, 此时其可以看作 torch.empty() 的一个特例</em></p>          </div><h3 id="Tensor-的数据类型"><a href="#Tensor-的数据类型" class="headerlink" title="Tensor 的数据类型"></a>Tensor 的数据类型</h3><ul><li>torh.FloatTensor() 或 torch.Tenosr(): 32 位浮点数</li><li>torch.DoubleTenosr(): 64 位浮点数</li><li>torch.ShortTensor(): 16 位整型</li><li>torch.IntTensor(): 32 位整型</li><li>torch.LongTensor(): 64 位整型</li></ul><p><strong>数据类型转化:</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python">tesor = torch.Tensor(<span class="hljs-number">3</span>, <span class="hljs-number">5</span>)  <span class="hljs-comment"># 随机生成 3*5 的 tensor</span><br><span class="hljs-comment"># 转成 long 类型</span><br>newtensor = tensor.long()<br><span class="hljs-comment"># 转成半精度浮点类型 (float16)</span><br>newtensor = tensor.half()<br><span class="hljs-comment"># 转成 int 类型</span><br>newtensor = tensor.<span class="hljs-built_in">int</span>()<br><span class="hljs-comment"># 转成 short 类型</span><br>newtensor = tensor.short()<br><span class="hljs-comment"># 转成 double 类型</span><br>newtensor = tensor.double()<br><span class="hljs-comment"># 转成 float 类型</span><br>newtensor = tensor.<span class="hljs-built_in">float</span>()<br><span class="hljs-comment"># 转成 char 类型</span><br>newtensor = tensor.char()<br><span class="hljs-comment"># 转成 byte 类型</span><br>newtensor = tensor.byte()<br></code></pre></td></tr></table></figure><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><ul><li>Tensor.tolist(): return the tensor as a (nested) list. For scalars, a standard Python number is returned like <code>Tensor.item()</code> (only work for tensors with one element)</li><li>Tensor.item(): return the value of this tensor as a standard Python number</li><li>Tensor.numpy(): 将 Tensor 类型转变为 numpy 类型</li><li>Tensor.to(*arg, **kwargs): change an existing tensor’s <code>torch.device</code> and <code>torch.dtype</code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">tensor = torch.rand(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>)<br>tensor.to(torch.float64)<br>cuda0 = torch.device(<span class="hljs-string">&#x27;cuda:0&#x27;</span>)<br>tensor.to(cuda0)<br></code></pre></td></tr></table></figure></li></ul><h2 id="操作中参数-dim-的理解"><a href="#操作中参数-dim-的理解" class="headerlink" title="操作中参数 dim 的理解"></a>操作中参数 <code>dim</code> 的理解</h2><p><strong>The way to understand the “axis” in NumPy or “dim” in PyTorch is that it <em>collapses the specified axis. So when it collapses</em> the axis 0 (the row), it becomes just one row (column-wise)</strong></p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://blog.csdn.net/weixin_42782150/article/details/106862236">Yale曼陀罗. PyTorch学习笔记——Tensor张量的数据类型的转化、Tensor常见的数据类型、快速创建Tensor. CSDN</a><br>[2] <a href="https://mathpretty.com/12065.html">王茂南. 理解 PyTorch 中维度的概念</a><br>[3] <a href="https://towardsdatascience.com/understanding-dimensions-in-pytorch-6edf9972d3be">Boyan Barakov. Understanding dimensions in PyTorch</a></p><h1 id="torch"><a href="#torch" class="headerlink" title="torch"></a>torch</h1><ul><li>torch.mean(input): return the mean value of <strong>all</strong> elements in the <code>input</code> tensor</li><li>torch.tensor(data, *, dtype&#x3D;None, device&#x3D;None, requires_grad&#x3D;False): construct a tensor with <em>no</em> autograd history</li><li>torch.as_tensor(data, dtype&#x3D;None, device&#x3D;None): convert data into a tensor, sharing data and preserving autograd histroy <em>if possible</em><ul><li>torch.from_numpy(ndarray): create a Tensor from a numpy.ndarray, sharing the same memory</li></ul></li><li>torch.log(input): return a new tensor with the natural logirthm of the <em>elements</em> of input, $y_i &#x3D; \ln x_i$<!-- STOP HERE: 2024-04-24/22:32 --></li><li>torch.stack(): 沿着一个新维度对输入张量序列进行连接, 序列中所有的张量具有相同形状</li><li>torh.flatten(input, start_dim&#x3D;0, end_dim&#x3D;-1): reshape the input into a one-dimensional tensor</li><li>torch.split(tensor, split_size_or_sections, dim&#x3D;0): split the tensor into chunks</li><li>torch.index_select(input, dim, index, *, out&#x3D;None): <ul><li><a href="https://blog.csdn.net/qq_50001789/article/details/120315215">视觉萌新. torch.index_select()——数组索引. CSDN</a></li><li><a href="https://pytorch.org/docs/stable/generated/torch.index_select.html">TORCH.INDEX_SELECT</a></li></ul></li><li>torch.cross(input, other, dim&#x3D;None): return the cross product of vectors in dimension <code>dim</code> of <code>input</code> and <code>other</code><ul><li><a href="https://pytorch.org/docs/stable/generated/torch.cross.html">TORCH.CROSS</a></li></ul></li><li>torch.outer(input, vec2): outer product of input and vec2 (可通过坐标生成坐标网格)</li><li>torch.inverse(A) 或者 torch.linalg.inv(A): 返回矩阵 A 的逆</li><li>torch.matmul(A, B) 或者 A @ B: 矩阵相乘<ul><li><a href="https://blog.csdn.net/beauthy/article/details/121103704">柏常青. pytorch中的矩阵乘法：函数mul,mm,mv以及 @运算 和 *运算. CSDN</a></li></ul></li></ul><h2 id="数据加载-utils-data"><a href="#数据加载-utils-data" class="headerlink" title="数据加载 utils.data"></a>数据加载 utils.data</h2><ul><li><code>DataLoader</code>: <code>__len__(), __get_item__()</code></li><li><code>Sampler</code>: <code>__init__(), __iter__()</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 获取 train_data_loader 的某个 batch</span><br>batch = <span class="hljs-built_in">next</span>(<span class="hljs-built_in">iter</span>(train_data_loader))<br>target_batch_index = <span class="hljs-number">3</span><br><span class="hljs-keyword">for</span> idx, batch <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(train_data_loader):<br>    <span class="hljs-keyword">if</span> idx == target_batch_index:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Batch Index:&quot;</span>, idx)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Batch Data:&quot;</span>, batch)<br></code></pre></td></tr></table></figure><h2 id="copy-与-detach"><a href="#copy-与-detach" class="headerlink" title="copy 与 detach"></a>copy 与 detach</h2><p>When we wan to graph some of our tensors. We may have a tensor that requires gradient tracking, but you want a (shallow) copy that does not. This is because <code>matplotlib</code> expects a NumPy array as input, and the implict conversion from a PyTorch tensor to a NumPy array is <strong>not enabled for tensors with <code>requires_grad=True</code></strong>. Making a <code>detached copy</code> lets us move forward.</p><h2 id="模型加载与保存"><a href="#模型加载与保存" class="headerlink" title="模型加载与保存"></a>模型加载与保存</h2><ul><li>torch.save()</li><li>torch.load()<ul><li><a href="https://blog.csdn.net/weixin_40522801/article/details/106563354">宁静致远*. Pytorch：模型的保存与加载. CSDN</a></li><li><a href="https://zhuanlan.zhihu.com/p/82038049">鑫鑫淼淼焱焱. PyTorch | 保存和加载模型. 知乎</a></li></ul></li></ul><h2 id="Optimizer"><a href="#Optimizer" class="headerlink" title="Optimizer"></a>Optimizer</h2><ul><li><a href="https://pytorch.org/docs/stable/optim.html">TORCH.OPTIM</a></li></ul><h3 id="学习率"><a href="#学习率" class="headerlink" title="学习率"></a>学习率</h3><ul><li><a href="https://blog.csdn.net/qyhaill/article/details/103043637?spm=1001.2101.3001.6650.2&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-2-103043637-blog-109841612.235%5Ev38%5Epc_relevant_sort_base1&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-2-103043637-blog-109841612.235%5Ev38%5Epc_relevant_sort_base1&utm_relevant_index=3">八块腹肌怎么练. torch.optim.lr_scheduler：调整学习率. CSDN</a></li></ul><h2 id="nn"><a href="#nn" class="headerlink" title="nn"></a>nn</h2><ul><li>CrossEntropyLoss<ul><li><a href="https://blog.csdn.net/qq_36201400/article/details/111335423?spm=1001.2101.3001.6650.10&utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-10-111335423-blog-124689632.235%5Ev38%5Epc_relevant_sort_base1&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-10-111335423-blog-124689632.235%5Ev38%5Epc_relevant_sort_base1&utm_relevant_index=13">仁义礼智信达. torch.nn.CrossEntropyLoss()用法. CSDN</a></li><li><a href="https://blog.csdn.net/weixin_45414792/article/details/120778065?spm=1001.2101.3001.6650.13&utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-13-120778065-blog-124689632.235%5Ev38%5Epc_relevant_sort_base1&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-13-120778065-blog-124689632.235%5Ev38%5Epc_relevant_sort_base1&utm_relevant_index=16">有点聪明的亚子1. nn.CrossEntropyLoss()交叉熵损失函数. CSDN</a></li></ul></li></ul><h2 id="distributed"><a href="#distributed" class="headerlink" title="distributed"></a>distributed</h2><ul><li>基本概念<ul><li><a href="https://zhuanlan.zhihu.com/p/76638962">Pytorch 分布式训练</a></li><li><a href="https://blog.csdn.net/hxxjxw/article/details/119606518">DPP的基本概念</a></li></ul></li><li><code>launch</code>: 分布式训练运行命令<ul><li><a href="https://blog.csdn.net/magic_ll/article/details/122359490">torch.distributed.launch 命令</a></li></ul></li><li><code>init_process_group()</code>: 分布式训练初始化<ul><li><a href="https://blog.csdn.net/weixin_38252409/article/details/134965424">torch.distributed.init_process_group()详细说明</a></li></ul></li></ul><h1 id="torchvision"><a href="#torchvision" class="headerlink" title="torchvision"></a>torchvision</h1><h2 id="utils"><a href="#utils" class="headerlink" title="utils"></a>utils</h2><ul><li>make_grid(tensor, nrow&#x3D;8, padding&#x3D;2, normalize&#x3D;False, range&#x3D;None, sacle_each&#x3D;False, pad_value&#x3D;0): make a grid of images<ul><li>tensor [B, C, H, W]</li><li><a href="https://pytorch.org/vision/stable/generated/torchvision.utils.make_grid.html">torchvision.utils.make_grid</a></li></ul></li><li></li></ul><h1 id="Auto-Differentiation-with-torch-autograd"><a href="#Auto-Differentiation-with-torch-autograd" class="headerlink" title="Auto Differentiation with torch.autograd"></a>Auto Differentiation with <code>torch.autograd</code></h1><p>By default, all tensors with <code>requires_grad=True</code> are tracking their computational history and support gradient computation. However, there are some cases when we do not need to do that, for example, when we have thained the model and just want to apply it to some input data, i.e. we only want to <em>forward</em> computations through the network. We can stop tracking computations by surrounding our computiation code with <code>torch.no_grad()</code> block<br>Another way to achieve the same result is to use the <code>detach()</code> method on the tensor<br>There are reasons you might want to disable gradient tracking:</p><ul><li>To mark some parameters in your neural network as <strong>frozen parameters</strong>.</li><li>To <strong>speed up computations</strong> when you are only doing forward pass, because computations on tensors that do not track gardients would be more efficient</li></ul><p>In a forward pass, autograd does two things simultaneously:</p><ul><li>run the requested operation to compute a resulting tensor</li><li>maintain the operation’s <em>gradient function</em> in the DAG (dicected acyclic graph)</li></ul><p>The backward pass kicks off when <code>.backward()</code> is called on the DAG root, <code>autograd</code> then:</p><ul><li>computes the gradients from each <code>.grad_fn</code>,</li><li>accumulates them in the respective tensor’s <code>.grad</code> attribute</li><li>using the chain rule, propagates all the way to the leaf tensors</li></ul><p>For a vector functon, a gradient of function to parameters is given by <strong>Jacobian matrix</strong>. Instead of computing the Jacobian matrix itself, PyTorch allows you to compute <strong>Jacobian Product</strong> $v^T\cdot J$ for a given input column tensor $v$. This achieved by calling <code>backward</code> with $v$ as an argument. The size of $v$ should be the same as the size of the vector function.</p>]]></content>
    
    
    <categories>
      
      <category>Coding</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu 文件操作</title>
    <link href="/2024/04/19/Ubuntu-%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"/>
    <url>/2024/04/19/Ubuntu-%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="查看文件内容"><a href="#查看文件内容" class="headerlink" title="查看文件内容"></a>查看文件内容</h1><ul><li><code>tail -f filename</code>: 查看文件最尾部的内容, 并且不断刷新, <strong>特别适合查阅不断更新的日志文件</strong> <sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="[Linux tail 命令. 菜鸟教程](https://www.runoob.com/linux/linux-comm-tail.html)">[1]</span></a></sup><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># tail 常用参数</span><br>- f: 循环读取 (Ctrl + C 停止显示)<br>- n: 显示尾部行数 (默认10行)<br></code></pre></td></tr></table></figure></li></ul><h1 id="压缩与解压缩"><a href="#压缩与解压缩" class="headerlink" title="压缩与解压缩"></a>压缩与解压缩</h1><h2 id="tar-gz-文件"><a href="#tar-gz-文件" class="headerlink" title="tar.gz 文件"></a>tar.gz 文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 通用参数说明</span><br>-v: 显示执行过程<br>-z: 通过 gzip 命令处理文件<br>-f: 指定备份文件<br><br><span class="hljs-comment"># 解压缩, -x 还原文件</span><br>tar -xvzf file.tar.gz<br><br><span class="hljs-comment"># 解压缩 tar.xz 文件</span><br>tar -xvf file.tar.xz<br><br><span class="hljs-comment"># 压缩并打包 -c 建立新的备份文件</span><br>tar -cvzf compact_file.tar.gz source_file<br><br><span class="hljs-comment"># 列出压缩文件内容, -t 列出备份文件内容</span><br>tar -tvzf file.tar.gz<br></code></pre></td></tr></table></figure><h2 id="zip-文件"><a href="#zip-文件" class="headerlink" title="zip 文件"></a>zip 文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># zip 压缩参数说明</span><br>r: 递归处理文件和文件夹<br>q: 不显示执行过程<br>v: 显示执行过程<br>d: 从压缩文件中删除指定文件<br><br><span class="hljs-comment"># 把 zip_folder 下所有文件和文件夹打包为当前目录下的 zip_file.zip</span><br>zip -qr zip_file.zip zip_folder<br><br><span class="hljs-comment">## 从压缩文件 zip_file.zip 中删除 delete_file</span><br>zip -dv zip_file.zip delete_file<br><br><br><span class="hljs-comment"># (可能要先安装 unzip)</span><br><span class="hljs-comment"># sudo apt install unzip</span><br><br><span class="hljs-comment"># 解压到当前目录</span><br>unzip file.zip<br><br><span class="hljs-comment"># 查看 zip 压缩包含的文件</span><br>unzip -l file.zip<br></code></pre></td></tr></table></figure><h1 id="文件复制-2-3"><a href="#文件复制-2-3" class="headerlink" title="文件复制 [2]-[3]"></a>文件复制 <sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="[Linux cp 命令. RUNOOB.COM](https://www.runoob.com/linux/linux-comm-cp.html)">[2]</span></a></sup><sup>-</sup><sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="[ubuntu cp 命令](https://wenku.csdn.net/answer/c95a332c6633464794f5a97d5f18859c#:~:text=ubuntu%20cp命令%201%20-r：递归复制目录及其子目录和文件。%202%20-i：交互式复制，如果目标文件已经存在，则提示用户是否覆盖。,3%20-f：强制复制，覆盖目标文件而不提示用户。%204%20-v：显示详细的复制过程。%205%20-p：保留源文件的权限、所有权和时间戳%E3%80%82)">[3]</span></a></sup></h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 复制多个文件 (夹) 到指定目录 (需要先创建) 下</span><br><span class="hljs-built_in">cp</span> -r souce_dir/ source_file object_dir/<br><span class="hljs-comment"># 不复制文件夹下特定文件到指定目录, 其余复制</span><br><span class="hljs-built_in">cd</span> source_dir<br><span class="hljs-built_in">cp</span> -r `<span class="hljs-built_in">ls</span> grep -v excluded | xargs` object_dir/<br><span class="hljs-comment"># 如果目标文件存在, 强制覆盖</span><br><span class="hljs-built_in">cp</span> -f source_file object_path<br><span class="hljs-comment"># 其它参数</span><br>-v: 显示复制的进度<br>-i: 交互式复制<br></code></pre></td></tr></table></figure><h1 id="文件下载"><a href="#文件下载" class="headerlink" title="文件下载"></a>文件下载</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 下载单个文件并保存在当前目录</span><br>wget file_url<br><span class="hljs-comment"># 下载单个文件并改名</span><br>wget -O new_name file_url<br>curl file_url -o new_name<br><span class="hljs-comment"># 示例</span><br><span class="hljs-built_in">mkdir</span> d2l-zh &amp;&amp; <span class="hljs-built_in">cd</span> d2l-zh<br>curl https://zh-v2.d2l.ai/d2l-zh-2.0.0.zip -o d2l-zh.zip<br>unzip d2l-zh.zip &amp;&amp; <span class="hljs-built_in">rm</span> d2l-zh.zip<br></code></pre></td></tr></table></figure><h1 id="文件传输"><a href="#文件传输" class="headerlink" title="文件传输"></a>文件传输</h1><p>在两台服务器之间利用 <code>ssh</code> 传输文件 <sup id="fnref:4" class="footnote-ref"><a href="#fn:4" rel="footnote"><span class="hint--top hint--rounded" aria-label="[星海. 两台Linux服务器之间传输文件的四种方法. 知乎](https://zhuanlan.zhihu.com/p/78133776)">[4]</span></a></sup></p><h2 id="scp-secure-copy-命令"><a href="#scp-secure-copy-命令" class="headerlink" title="scp (secure copy) 命令"></a>scp (secure copy) 命令</h2><p><strong>命令格式:</strong> <code>scp 参数 用户名@IP:源文件路径 用户名@IP:目标路径</code> , <strong>-r</strong> 传输文件夹, <strong>-v</strong>, 显示传输详情</p><h2 id="rsync-remote-synchronization-命令"><a href="#rsync-remote-synchronization-命令" class="headerlink" title="rsync (remote synchronization) 命令"></a>rsync (remote synchronization) 命令</h2><p><strong>命令格式同 scp</strong>, <em>但可以多一个 <code>--exclude relative_path</code> 参数, 支持排除目录</em>, 例如命令<br><code>rsync -r --exclude  test/exculde user_name@IP:/path/test ./ </code></p><h1 id="链接文件-5-6"><a href="#链接文件-5-6" class="headerlink" title="链接文件 [5]-[6]"></a>链接文件 <sup id="fnref:5" class="footnote-ref"><a href="#fn:5" rel="footnote"><span class="hint--top hint--rounded" aria-label="[weixin_34248118. linux查看硬链接对应的所有文件. CSDN](https://blog.csdn.net/weixin_34248118/article/details/89805804?spm=1001.2101.3001.6650.7&utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-7-89805804-blog-37692587.235^v39^pc_relevant_anti_vip&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-7-89805804-blog-37692587.235^v39^pc_relevant_anti_vip)">[5]</span></a></sup><sup>-</sup><sup id="fnref:6" class="footnote-ref"><a href="#fn:6" rel="footnote"><span class="hint--top hint--rounded" aria-label="[hongweigg. Linux中怎么看出文件是硬连接?. CSDN](https://blog.csdn.net/hongweigg/article/details/37692587)">[6]</span></a></sup></h1><ul><li>链接文件分为硬链接和软链接, 硬链接相当于一个文件两个名称, 而<strong>软链接相当于创建快捷方式</strong>, 创建链接时建议使用<strong>绝对路径</strong></li><li>可使用 <code>ll</code> 命令查看软链接, 其中带有 <strong>l</strong> 标识的为软链接, 并有明确的指向</li><li><strong>文件夹没有硬链接, 只有软链接</strong>, 使用 <code>ll</code> 命令结果的第二列表示<strong>文件</strong>的硬链接数<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 为 file_name 建立硬链接</span><br><span class="hljs-built_in">ln</span> file_name ln_name<br><span class="hljs-comment"># 为 file_name 建立软链接</span><br><span class="hljs-built_in">ln</span> -s file_name ln_name<br></code></pre></td></tr></table></figure></li><li>硬链接查看方式: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看文件的 inode</span><br><span class="hljs-built_in">ls</span> -il dir_name<br><span class="hljs-comment"># 查找所有 inode_index 的文件</span><br>find dir_name -inum inode_index<br></code></pre></td></tr></table></figure></li></ul><h1 id="文件属性"><a href="#文件属性" class="headerlink" title="文件属性"></a>文件属性</h1><h2 id="ls-命令"><a href="#ls-命令" class="headerlink" title="ls 命令"></a>ls 命令</h2><p><code>ls</code> 默认为 <code>ls =&#39;ls --color=auto&#39;</code>, 可通过 <code>alias ls</code> 查看, 其中 <em>–color&#x3D;auto</em> 表示以不同颜色显示不同类型的文件和目录: 目录为蓝色, 可执行文件为绿色, 常规文件为黑色, 符号链接为浅绿色<br>可通过 <code>ls -hl</code> 查看更为详细的信息, 其中第一列第一个字符若为 <em>-</em> 表示常规文件, <em>d</em> 表示目录, <em>l</em> 表示符号链接, 进一步添加 <code>-a</code> 选项查看隐藏文件 (以*.* 开头), 参数 <code>h</code> 表示使用易读的方式显示</p><h2 id="文件大小"><a href="#文件大小" class="headerlink" title="文件大小"></a>文件大小</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看压缩文件大小</span><br>ll  <span class="hljs-comment"># ls -hl</span><br><span class="hljs-comment"># 查看文件(夹)大小</span><br><span class="hljs-built_in">du</span> -sh file_name<br><span class="hljs-comment"># 查看当前目录下所有子文件(目录)的大小</span><br><span class="hljs-built_in">du</span> -ah --max-depth=1  <span class="hljs-comment"># a 参数表示显示所有文件的大小</span><br><span class="hljs-comment"># 查看当前目录及一级子目录的大小</span><br><span class="hljs-built_in">du</span> -h --max-depth=1<br><span class="hljs-comment"># 查看当前目录的大小</span><br><span class="hljs-built_in">du</span> -sh  <span class="hljs-comment"># du -h --max-depth=0</span><br></code></pre></td></tr></table></figure><p><strong>服务器管理常用命令:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看当前目录下所以文件 (夹) 的大小, 并逆序排列</span><br>sudo <span class="hljs-built_in">du</span> -ah --max-depth=1 | <span class="hljs-built_in">sort</span> -rh<br><br><span class="hljs-comment"># 查看当前目录下所以一级和二级子目录的大小, 逆序输出前 20 条记录</span><br>sudo <span class="hljs-built_in">du</span> -h --max-depth=2 | <span class="hljs-built_in">sort</span> -rh | <span class="hljs-built_in">head</span> -n 20<br></code></pre></td></tr></table></figure><h2 id="磁盘空间-7"><a href="#磁盘空间-7" class="headerlink" title="磁盘空间 [7]"></a>磁盘空间 <sup id="fnref:7" class="footnote-ref"><a href="#fn:7" rel="footnote"><span class="hint--top hint--rounded" aria-label="[那记忆微凉. Ubuntu下查看文件、文件夹和磁盘空间的大小. CSDN](https://blog.csdn.net/BigData_Mining/article/details/88998472)">[7]</span></a></sup></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看系统磁盘使用信息</span><br><span class="hljs-built_in">df</span> -h  <span class="hljs-comment"># 文件系统 容量 已用 可用 已用% 挂载点</span><br></code></pre></td></tr></table></figure><h2 id="文件绝对路径-8"><a href="#文件绝对路径-8" class="headerlink" title="文件绝对路径 [8]"></a>文件绝对路径 <sup id="fnref:8" class="footnote-ref"><a href="#fn:8" rel="footnote"><span class="hint--top hint--rounded" aria-label="[CSDN云计算. Linux 中如何获取文件的绝对路径. CSDN](https://blog.csdn.net/FL63Zv9Zou86950w/article/details/126945089#:~:text=我们可以在%20ls%20命令中使用环境变量PWD来显示文件和目录的绝对路径，如下：%20ls%20-ld%20%24PWD%2F*,使用上述命令，会得到如下输出：%20%24%20ls%20-ld%20%24PWD%20%2F%2a)">[8]</span></a></sup></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">realpath</span> file_dir_name<br><span class="hljs-built_in">realpath</span> -s file_dir_name  <span class="hljs-comment"># 显示符号连接的路径而不是源文件</span><br><span class="hljs-built_in">readlink</span> -f file_dir_name<br>find $(<span class="hljs-built_in">pwd</span>) -name file_dir_name<br>find $(<span class="hljs-built_in">pwd</span>) -name <span class="hljs-string">&quot;*.pdf&quot;</span>  <span class="hljs-comment"># 显示当前目录下所有 pdf 文件的绝对路径</span><br><span class="hljs-built_in">ls</span> -l <span class="hljs-variable">$PWD</span>/file_dir_name<br><span class="hljs-built_in">ls</span> -l <span class="hljs-variable">$PWD</span>/*<br></code></pre></td></tr></table></figure><h2 id="文件权限-chmod"><a href="#文件权限-chmod" class="headerlink" title="文件权限-chmod"></a>文件权限-chmod</h2><p><code>chmod</code> (change mode) 命令 <sup id="fnref:9" class="footnote-ref"><a href="#fn:9" rel="footnote"><span class="hint--top hint--rounded" aria-label="[Linux chmod命令. 菜鸟教程](https://www.runoob.com/linux/linux-comm-chmod.html)">[9]</span></a></sup> 控制用户对文件的权限<br>权限分三级: 文件所有者 (Owner), 用户组 (Group), 其它用户 (Other Users)</p><p><img src="/img/posts/Ubuntu-%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/ls-l_output.png" alt="ls -l 输出示意图"></p><p>只有文件所有者和超级用户可以修改文件或目录的权限, 可使用<strong>绝对模式 (八进制数字模式)</strong>, <strong>符号模式</strong>指定文件的权限</p><p><img src="/img/posts/Ubuntu-%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/authority.png" alt="权限示意图"></p><p><strong>常用命令</strong></p><ul><li><code>chmod abc file_name</code>: abc 各为一个数字, 分别表示 User, Group 和 Others 的权限, <strong>r:4, w:2, x:1</strong></li><li><code>chmod ucd,gcd,ocd file_name</code>: 其中 c 为 <strong>+, -, &#x3D;</strong>, d 为 <strong>w, r, x</strong>的任意组合 (可为空)</li><li><code>chmod acd</code>: 为 <strong>u, g, o</strong> 三者赋予相同权限 <strong>cd</strong></li><li><code>chmod -R mode dir_name</code>: 为目录及其所有文件与子目录设置统一权限模式 <strong>mode</strong></li></ul><p><strong>实例</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> go+rx folder_name <span class="hljs-comment"># 为 Group 和 Others 添加读和执行权限</span><br><span class="hljs-built_in">chmod</span> a+x file_name  <span class="hljs-comment"># 为所有用户添加执行权限</span><br></code></pre></td></tr></table></figure><h2 id="属性-lsattr"><a href="#属性-lsattr" class="headerlink" title="属性-lsattr"></a>属性-lsattr</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 显示文件属性</span><br>lsattr file_name<br><span class="hljs-comment"># 显示目录属性</span><br>lsattr -d dir_name<br><span class="hljs-comment"># 显示所有文件和目录的属性</span><br>lsattr -a dir_name<br><span class="hljs-comment"># 增加或减少文件 i(mmutable) 属性 (不可修改, 包括 root)</span><br>chattr +i file_name  <span class="hljs-comment"># 防止文件被修改, 尤其是 /etc 下的文件</span><br>chattr -i file_name<br><span class="hljs-comment"># 使文件只能增加数据, 而不能删除</span><br>chattr +a file_name<br></code></pre></td></tr></table></figure><div class="note note-info">            <h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1>          </div><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://www.runoob.com/linux/linux-comm-tail.html">Linux tail 命令. 菜鸟教程</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://www.runoob.com/linux/linux-comm-cp.html">Linux cp 命令. RUNOOB.COM</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://wenku.csdn.net/answer/c95a332c6633464794f5a97d5f18859c#:~:text=ubuntu%20cp%E5%91%BD%E4%BB%A4%201%20-r%EF%BC%9A%E9%80%92%E5%BD%92%E5%A4%8D%E5%88%B6%E7%9B%AE%E5%BD%95%E5%8F%8A%E5%85%B6%E5%AD%90%E7%9B%AE%E5%BD%95%E5%92%8C%E6%96%87%E4%BB%B6%E3%80%82%202%20-i%EF%BC%9A%E4%BA%A4%E4%BA%92%E5%BC%8F%E5%A4%8D%E5%88%B6%EF%BC%8C%E5%A6%82%E6%9E%9C%E7%9B%AE%E6%A0%87%E6%96%87%E4%BB%B6%E5%B7%B2%E7%BB%8F%E5%AD%98%E5%9C%A8%EF%BC%8C%E5%88%99%E6%8F%90%E7%A4%BA%E7%94%A8%E6%88%B7%E6%98%AF%E5%90%A6%E8%A6%86%E7%9B%96%E3%80%82,3%20-f%EF%BC%9A%E5%BC%BA%E5%88%B6%E5%A4%8D%E5%88%B6%EF%BC%8C%E8%A6%86%E7%9B%96%E7%9B%AE%E6%A0%87%E6%96%87%E4%BB%B6%E8%80%8C%E4%B8%8D%E6%8F%90%E7%A4%BA%E7%94%A8%E6%88%B7%E3%80%82%204%20-v%EF%BC%9A%E6%98%BE%E7%A4%BA%E8%AF%A6%E7%BB%86%E7%9A%84%E5%A4%8D%E5%88%B6%E8%BF%87%E7%A8%8B%E3%80%82%205%20-p%EF%BC%9A%E4%BF%9D%E7%95%99%E6%BA%90%E6%96%87%E4%BB%B6%E7%9A%84%E6%9D%83%E9%99%90%E3%80%81%E6%89%80%E6%9C%89%E6%9D%83%E5%92%8C%E6%97%B6%E9%97%B4%E6%88%B3%E3%80%82">ubuntu cp 命令</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span><a href="https://zhuanlan.zhihu.com/p/78133776">星海. 两台Linux服务器之间传输文件的四种方法. 知乎</a><a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:5" class="footnote-text"><span><a href="https://blog.csdn.net/weixin_34248118/article/details/89805804?spm=1001.2101.3001.6650.7&utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-7-89805804-blog-37692587.235%5Ev39%5Epc_relevant_anti_vip&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-7-89805804-blog-37692587.235%5Ev39%5Epc_relevant_anti_vip">weixin_34248118. linux查看硬链接对应的所有文件. CSDN</a><a href="#fnref:5" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:6" class="footnote-text"><span><a href="https://blog.csdn.net/hongweigg/article/details/37692587">hongweigg. Linux中怎么看出文件是硬连接?. CSDN</a><a href="#fnref:6" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:7" class="footnote-text"><span><a href="https://blog.csdn.net/BigData_Mining/article/details/88998472">那记忆微凉. Ubuntu下查看文件、文件夹和磁盘空间的大小. CSDN</a><a href="#fnref:7" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:8" class="footnote-text"><span><a href="https://blog.csdn.net/FL63Zv9Zou86950w/article/details/126945089#:~:text=%E6%88%91%E4%BB%AC%E5%8F%AF%E4%BB%A5%E5%9C%A8%20ls%20%E5%91%BD%E4%BB%A4%E4%B8%AD%E4%BD%BF%E7%94%A8%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8FPWD%E6%9D%A5%E6%98%BE%E7%A4%BA%E6%96%87%E4%BB%B6%E5%92%8C%E7%9B%AE%E5%BD%95%E7%9A%84%E7%BB%9D%E5%AF%B9%E8%B7%AF%E5%BE%84%EF%BC%8C%E5%A6%82%E4%B8%8B%EF%BC%9A%20ls%20-ld%20%24PWD%2F*,%E4%BD%BF%E7%94%A8%E4%B8%8A%E8%BF%B0%E5%91%BD%E4%BB%A4%EF%BC%8C%E4%BC%9A%E5%BE%97%E5%88%B0%E5%A6%82%E4%B8%8B%E8%BE%93%E5%87%BA%EF%BC%9A%20%24%20ls%20-ld%20%24PWD%20%2F%2a">CSDN云计算. Linux 中如何获取文件的绝对路径. CSDN</a><a href="#fnref:8" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:9" class="footnote-text"><span><a href="https://www.runoob.com/linux/linux-comm-chmod.html">Linux chmod命令. 菜鸟教程</a><a href="#fnref:9" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Ubuntu</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Back to Hexo Blog</title>
    <link href="/2024/04/07/Back-to-Hexo-Blog/"/>
    <url>/2024/04/07/Back-to-Hexo-Blog/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p style="text-indent:2em">时隔半年, 决定再次使用 Hexo 写博客, 之前一直用 CSDN, 但强迫症兼完美主义实在无法忍受其广告和弹窗 (尽管已经用了部分 Edge 去广告插件), 遂转向 Hexo, 即使可能会多费些时间</p>]]></content>
    
    
    <categories>
      
      <category>Life</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Grocery</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Install and Configure ZSH on Ubuntu_20.04</title>
    <link href="/2023/07/22/Install-and-Configure-ZSH-on-Ubuntu-20-04/"/>
    <url>/2023/07/22/Install-and-Configure-ZSH-on-Ubuntu-20-04/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>Ubuntu 20.04 安装 ZSH, 并用 oh-my-zsh 进行主题与插件配置</p><h1 id="Install-ZSH-1"><a href="#Install-ZSH-1" class="headerlink" title="Install ZSH [1]"></a>Install ZSH <sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="[Ubuntu 20.04 安装zsh](https://blog.csdn.net/dinofish/article/details/104452908)">[1]</span></a></sup></h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看系统已安装的 shell</span><br><span class="hljs-built_in">cat</span> /etc/shells<br><span class="hljs-comment"># 查看当前使用的 shell</span><br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$SHELL</span><br>sudo apt update<br>sudo apt upgrade  <span class="hljs-comment"># 可选</span><br>sudo apt install zsh<br>chsh -s /bin/zsh  <span class="hljs-comment"># 将 zsh 设置为默认 shell</span><br><span class="hljs-comment"># 注销或者重启后生效</span><br></code></pre></td></tr></table></figure><p>重新进入终端, 会自动进入 zsh 的配置界面, 可直接按 <code>q</code> 退出, 稍后用 <code>oh-my-zsh</code> 配置</p><h1 id="Install-oh-my-zsh"><a href="#Install-oh-my-zsh" class="headerlink" title="Install oh-my-zsh"></a>Install <a href="https://github.com/ohmyzsh/ohmyzsh">oh-my-zsh</a></h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install git  <span class="hljs-comment"># 安装 git</span><br>sh -c <span class="hljs-string">&quot;<span class="hljs-subst">$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>&quot;</span>  <span class="hljs-comment"># 该命令本质是先下载 install.sh 文件, 再运行安装</span><br><span class="hljs-comment"># 可以先下载 install.sh 文件到本地, 然后执行 sh install.sh</span><br></code></pre></td></tr></table></figure><p>如果无法安装, 多半因为上网没有使用魔法, 可如下更改 <a href="/img/posts/Install-and-Configure-ZSH-on-Ubuntu-20-04/install.sh">install.sh</a> 文件 (或点击下载), 然后重新安装 <sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="[ZSH、oh-my-zsh安装教程及插件和主题推荐](https://zhaoliangcheng.blog.csdn.net/article/details/125106594?spm=1001.2101.3001.6650.18&utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-18-125106594-blog-119146233.235^v38^pc_relevant_sort_base1&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-18-125106594-blog-119146233.235^v38^pc_relevant_sort_base1&utm_relevant_index=19)">[3]</span></a></sup></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 找到对应位置进行替换 (本质: 从 gitee 上下载资源)</span><br><span class="hljs-comment"># Default settings</span><br><span class="hljs-comment"># REPO=$&#123;REPO:-ohmyzsh/ohmyzsh&#125;</span><br>REPO=<span class="hljs-variable">$&#123;REPO:-llyxz93/ohmyzsh&#125;</span><br><span class="hljs-comment"># REMOTE=$&#123;REMOTE:-https://github.com/$&#123;REPO&#125;.git&#125;</span><br>REMOTE=<span class="hljs-variable">$&#123;REMOTE:-https://gitee.com/<span class="hljs-variable">$&#123;REPO&#125;</span>.git&#125;</span><br></code></pre></td></tr></table></figure><h1 id="Configure-ZSH-by-oh-my-zsh"><a href="#Configure-ZSH-by-oh-my-zsh" class="headerlink" title="Configure ZSH by oh-my-zsh"></a>Configure ZSH by oh-my-zsh</h1><h2 id="系统基本插件"><a href="#系统基本插件" class="headerlink" title="系统基本插件"></a>系统基本插件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-variable">$&#123;ZSH_CUSTOM&#125;</span>  <span class="hljs-comment"># 查看 ZSH_CUSTOM 的路径</span><br></code></pre></td></tr></table></figure><p>配置常用插件: pip, vi-mode, docker, extract</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim .zshrc<br><span class="hljs-comment"># 在 plugins = (git 后添加需要使用的插件)</span><br><span class="hljs-built_in">source</span> .zshrc<br></code></pre></td></tr></table></figure><h2 id="powerlevel10k-theme"><a href="#powerlevel10k-theme" class="headerlink" title="powerlevel10k theme"></a>powerlevel10k theme</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> --depth=1 https://gitee.com/romkatv/powerlevel10k.git <span class="hljs-variable">$&#123;ZSH_CUSTOM:-<span class="hljs-variable">$HOME</span>/.oh-my-zsh/custom&#125;</span>/themes/powerlevel10k<br>vim .zshrc<br><span class="hljs-comment"># 将 ZSH_THEME= 一行改为 ZSH_THEME=&quot;powerlevel10k/powerlevel10k&quot;</span><br><span class="hljs-built_in">exec</span> zsh  <span class="hljs-comment"># 重启 Zsh</span><br></code></pre></td></tr></table></figure><h2 id="安装扩展插件-2"><a href="#安装扩展插件-2" class="headerlink" title="安装扩展插件 [2]"></a>安装扩展插件 <sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="[zsh+ohmyzsh 终端美化](https://blog.csdn.net/qq_44797987/article/details/115290048)">[2]</span></a></sup></h2><h3 id="zsh-autosuggestions"><a href="#zsh-autosuggestions" class="headerlink" title="zsh-autosuggestions"></a>zsh-autosuggestions</h3><p>记录之前输入过的所有命令, 并自动匹配可能想要输入的命令, 按 $\rightarrow$ 补全</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://gitee.com/xiaoqqya/zsh-autosuggestions.git <span class="hljs-variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh&#125;</span>/plugins/zsh-autosuggestions<br>vim .zshrc  <span class="hljs-comment"># 启用 zsh-autosuggestions 插件</span><br><span class="hljs-comment"># 在 plugins = (git 后添加 zsh-autosuggestions)</span><br></code></pre></td></tr></table></figure><h3 id="zsh-syntax-highlighting"><a href="#zsh-syntax-highlighting" class="headerlink" title="zsh-syntax-highlighting"></a>zsh-syntax-highlighting</h3><p>语法高亮</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://gitee.com/xiaoqqya/zsh-syntax-highlighting.git <span class="hljs-variable">$&#123;ZSH_CUSTOM&#125;</span>/plugins/zsh-syntax-highlighting<br>vim .zshrc  <span class="hljs-comment"># 启用 zsh-syntax-highlighting 插件</span><br><span class="hljs-comment"># 在 plugins = (git 后添加 zsh-syntax-highlighting)</span><br></code></pre></td></tr></table></figure><h3 id="conda-zsh-completion"><a href="#conda-zsh-completion" class="headerlink" title="conda-zsh-completion"></a>conda-zsh-completion</h3><p>conda 命令补全</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://gitee.com/xiaoqqya/conda-zsh-completion.git <span class="hljs-variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/conda-zsh-completion<br>vim .zshrc  <span class="hljs-comment"># 启用 conda-zsh-completion 插件</span><br><span class="hljs-comment"># 在 plugins = (git 后添加 conda-zsh-completion)</span><br></code></pre></td></tr></table></figure><h2 id="将原-bash-的一些配置移植到-zsh"><a href="#将原-bash-的一些配置移植到-zsh" class="headerlink" title="将原 bash 的一些配置移植到 zsh"></a>将原 bash 的一些配置移植到 zsh</h2><p>将 <code>~/.bashrc</code> 中部分自定义词句复制到 <code>~/.zshrc</code> 对应位置处, 可能有</p><ul><li>alias</li><li>conda</li><li>PATH</li></ul><h1 id="Extension"><a href="#Extension" class="headerlink" title="Extension"></a>Extension</h1><p>自定义 (或以非 root 用户) 安装 zsh <sup id="fnref:4" class="footnote-ref"><a href="#fn:4" rel="footnote"><span class="hint--top hint--rounded" aria-label="[Linux 以非root用户安装zsh&配置on my zsh](https://www.cnblogs.com/XiiX/p/14618799.html)">[4]</span></a></sup></p><ol><li>建立 zsh 程序的安装目录: <code>path_to_zsh/zsh</code></li><li>下载最新版本的 zsh: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># XXX 换成最新的版本号</span><br>wget https://sourceforge.net/projects/zsh/files/latest/download/zsh-XXX.tar.xz<br></code></pre></td></tr></table></figure></li><li>…</li></ol><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://blog.csdn.net/dinofish/article/details/104452908">Ubuntu 20.04 安装zsh</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://blog.csdn.net/qq_44797987/article/details/115290048">zsh+ohmyzsh 终端美化</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://zhaoliangcheng.blog.csdn.net/article/details/125106594?spm=1001.2101.3001.6650.18&utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-18-125106594-blog-119146233.235%5Ev38%5Epc_relevant_sort_base1&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-18-125106594-blog-119146233.235%5Ev38%5Epc_relevant_sort_base1&utm_relevant_index=19">ZSH、oh-my-zsh安装教程及插件和主题推荐</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span><a href="https://www.cnblogs.com/XiiX/p/14618799.html">Linux 以非root用户安装zsh&amp;配置on my zsh</a><a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Ubuntu</category>
      
      <category>Software</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Programmer Dvorak Layout Anywhere</title>
    <link href="/2023/07/08/Programmer-Dvorak-Layout-Anywhere/"/>
    <url>/2023/07/08/Programmer-Dvorak-Layout-Anywhere/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>&ensp;&ensp;&ensp;&ensp;<strong>只有极少数人使用 <a href="https://www.kaufmann.no/roland/dvorak/">Programmer Dvorak (pdv) Keyboard Layout</a>.</strong> 某些情况下, 临时使用非自己电脑时, 若仍想使用 pdv 布局, 可利用 <a href="https://wyagd001.github.io/zh-cn/docs/index.htm"><strong>AutoHotkey (AHK)</strong></a> 进行键位映射, 模拟 <em>Programmer Dvorak Keyboard Layout</em>. 对此, 提供三种现成解决方案(建议使用第二种):</p><ol><li>直接下载 <a href="/img/posts/Programmer-Dvorak-Layout-Anywhere/pdv.exe">pdv.exe</a> 文件至本地, 双击运行即可</li><li>若不仅想使用 pdv 布局, 还想使用<strong>最基础</strong>的键位映射, 可下载 <a href="/img/posts/Programmer-Dvorak-Layout-Anywhere/pdv_plus.exe">pdv_plus.exe</a> 至本地运行<ul><li><code>LCtrl</code> 与 <code>LAlt</code> 交换, 方便 pdv 的复制与粘贴</li><li><code>Esc</code> 与 <code>CapsLock</code> 交换, VIM 用户专享</li><li><code>RAlt + b/m/h/l/u/i</code> 发送 <code>Up/Down/Left/Right/Home/End</code> 方向键, 最小化手在键盘上的移动</li></ul></li><li>若目标电脑已安装 AHK 软件, <strong>还</strong>可下载 <a href="/img/posts/Programmer-Dvorak-Layout-Anywhere/pdv.ahk">pdv.ahk</a> 文件至本地运行, 并可对其进行自定义</li></ol><h1 id="Source-Codes"><a href="#Source-Codes" class="headerlink" title="Source Codes"></a>Source Codes</h1><h2 id="pdv"><a href="#pdv" class="headerlink" title="pdv"></a>pdv</h2><p><a href="/img/posts/Programmer-Dvorak-Layout-Anywhere/pdv.ahk">pdv.ahk</a> 脚本涉及的主要语法为 AHK 软件的<a href="https://wyagd001.github.io/zh-cn/docs/misc/Remap.htm">重映射按键功能</a>, <a href="/img/posts/Programmer-Dvorak-Layout-Anywhere/pdv.exe">pdv.exe</a> 由其编译而得</p>    <div class="fold">      <div class="fold-title fold-success collapsed" data-toggle="collapse" href="#collapse-8f7bdefe" role="button" aria-expanded="false" aria-controls="collapse-8f7bdefe">        <div class="fold-arrow">▶</div>pdv.ahk      </div>      <div class="fold-collapse collapse" id="collapse-8f7bdefe">        <div class="fold-content">          <figure class="highlight autohotkey"><figcaption><span>pdv.ahk</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey"><span class="hljs-comment">; pdv.ahk</span><br><br><span class="hljs-comment">; basic</span><br><span class="hljs-title">q::</span>`;<br><span class="hljs-title">w::</span>,<br><span class="hljs-title">e::</span>.<br><span class="hljs-title">r::</span>p<br><span class="hljs-title">t::</span>y<br><span class="hljs-title">y::</span>f<br><span class="hljs-title">u::</span>g<br><span class="hljs-title">i::</span>c<br><span class="hljs-title">o::</span>r<br><span class="hljs-title">p::</span>l<br><span class="hljs-title">[::</span>/<br><br><span class="hljs-title">]::</span>@<br><span class="hljs-title">+]::</span>Send +<span class="hljs-number">6</span><br><br><span class="hljs-comment">; \::\</span><br><span class="hljs-comment">; a::a</span><br><span class="hljs-title">s::</span>o<br><span class="hljs-title">d::</span>e<br><span class="hljs-title">f::</span>u<br><span class="hljs-title">g::</span>i<br><span class="hljs-title">h::</span>d<br><span class="hljs-title">j::</span>h<br><span class="hljs-title">k::</span>t<br><span class="hljs-title">l::</span>n<br>`;::s<br><span class="hljs-title">&#x27;::</span>-<br><span class="hljs-title">z::</span>&#x27;<br><span class="hljs-title">x::</span>q<br><span class="hljs-title">c::</span>j<br><span class="hljs-title">v::</span>k<br><span class="hljs-title">b::</span>x<br><span class="hljs-title">n::</span>b<br><span class="hljs-comment">; m::m</span><br><span class="hljs-title">,::</span>w<br><span class="hljs-title">.::</span>v<br><span class="hljs-title">/::</span>z<br><br><span class="hljs-comment">; number</span><br>`::$<br><span class="hljs-title">+`::</span>~<br><span class="hljs-number">1</span>::&amp;<br><span class="hljs-title">+1::</span>Send +<span class="hljs-number">5</span><br><span class="hljs-number">2</span>::[<br><span class="hljs-title">+2::</span>Send <span class="hljs-number">7</span><br><span class="hljs-number">3</span>::&#123;<br><span class="hljs-title">+3::</span>Send <span class="hljs-number">5</span><br><span class="hljs-number">4</span>::&#125;<br><span class="hljs-title">+4::</span>Send <span class="hljs-number">3</span><br><span class="hljs-number">5</span>::(<br><span class="hljs-title">+5::</span>Send <span class="hljs-number">1</span><br><span class="hljs-number">6</span>::=<br><span class="hljs-title">+6::</span>Send <span class="hljs-number">9</span><br><span class="hljs-number">7</span>::*<br><span class="hljs-title">+7::</span>Send <span class="hljs-number">0</span><br><span class="hljs-number">8</span>::)<br><span class="hljs-title">+8::</span>Send <span class="hljs-number">2</span><br><span class="hljs-number">9</span>::+<br><span class="hljs-title">+9::</span>Send <span class="hljs-number">4</span><br><span class="hljs-number">0</span>::]<br><span class="hljs-title">+0::</span>Send <span class="hljs-number">6</span><br><span class="hljs-title">-::</span>!<br><span class="hljs-title">+-::</span>Send <span class="hljs-number">8</span><br><span class="hljs-title">=::</span>#<br><span class="hljs-title">+=::</span>Send ``<br><br><span class="hljs-title">Numpad1::</span>Numpad7<br><span class="hljs-title">Numpad2::</span>Numpad8<br><span class="hljs-title">Numpad3::</span>Numpad9<br><span class="hljs-title">Numpad7::</span>Numpad1<br><span class="hljs-title">Numpad8::</span>Numpad2<br><span class="hljs-title">Numpad9::</span>Numpad3<br></code></pre></td></tr></table></figure>        </div>      </div>    </div><h2 id="pdv-plus"><a href="#pdv-plus" class="headerlink" title="pdv_plus"></a>pdv_plus</h2> 为在 <a href="#pdv">pdv.ahk</a> 脚本<span class="label label-warning"><b>最后</b></span>加入下述代码编译而得    <div class="fold">      <div class="fold-title fold-success collapsed" data-toggle="collapse" href="#collapse-dcdac752" role="button" aria-expanded="false" aria-controls="collapse-dcdac752">        <div class="fold-arrow">▶</div>pdv_plus      </div>      <div class="fold-collapse collapse" id="collapse-dcdac752">        <div class="fold-content">          <figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey"><span class="hljs-comment">; pdv_plus</span><br><br><span class="hljs-comment">; LCtrl LAlt Esc CapsLock</span><br><span class="hljs-title">LAlt::</span>LCtrl<br><span class="hljs-title">LCtrl::</span>LAlt<br><span class="hljs-title">Esc::</span>CapsLock<br><span class="hljs-title">CapsLock::</span>Esc<br><br><span class="hljs-comment">; Left Right Down Up</span><br><span class="hljs-comment">; j-h</span><br><span class="hljs-title">RAlt &amp; j::</span>Send,&#123;Left&#125;<br><span class="hljs-comment">; p-l</span><br><span class="hljs-title">RAlt &amp; p::</span>Send,&#123;Right&#125;<br><span class="hljs-comment">; m-m</span><br><span class="hljs-title">RAlt &amp; m::</span>Send,&#123;Down&#125;<br><span class="hljs-comment">; n-b</span><br><span class="hljs-title">RAlt &amp; n::</span>Send,&#123;Up&#125;<br><br><span class="hljs-comment">; Home End</span><br><span class="hljs-comment">; f-u</span><br><span class="hljs-title">RAlt &amp; f::</span>Send,&#123;Home&#125;<br><span class="hljs-comment">; g-i</span><br><span class="hljs-title">RAlt &amp; g::</span>Send,&#123;End&#125;<br></code></pre></td></tr></table></figure>        </div>      </div>    </div><h1 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h1><ul><li>Windows 完全配置 pdv 键盘布局, 参考 <a href="https://www.kaufmann.no/roland/dvorak/">pdv 主页</a></li><li>    <div class="fold">      <div class="fold-title fold-success collapsed" data-toggle="collapse" href="#collapse-eac90f14" role="button" aria-expanded="false" aria-controls="collapse-eac90f14">        <div class="fold-arrow">▶</div>pdv 键盘布局缩略图      </div>      <div class="fold-collapse collapse" id="collapse-eac90f14">        <div class="fold-content">          <p align="center"><img src="/img/posts/Programmer-Dvorak-Layout-Anywhere/dvp.png" height="100%" alt="PDV 布局图"/></p>        </div>      </div>    </div></li></ul>]]></content>
    
    
    <categories>
      
      <category>Others</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AutoHotkey</tag>
      
      <tag>Keyboard</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
